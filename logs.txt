* 
* ==> Audit <==
* |---------|---------|----------|-------|---------|---------------------|---------------------|
| Command |  Args   | Profile  | User  | Version |     Start Time      |      End Time       |
|---------|---------|----------|-------|---------|---------------------|---------------------|
| start   |         | minikube | guhan | v1.32.0 | 08 Jan 24 12:50 IST |                     |
| start   |         | minikube | guhan | v1.32.0 | 08 Jan 24 12:59 IST | 08 Jan 24 13:00 IST |
| stop    |         | minikube | guhan | v1.32.0 | 08 Jan 24 13:01 IST | 08 Jan 24 13:02 IST |
| start   |         | minikube | guhan | v1.32.0 | 09 Jan 24 10:18 IST | 09 Jan 24 10:20 IST |
| ip      |         | minikube | guhan | v1.32.0 | 09 Jan 24 10:28 IST | 09 Jan 24 10:28 IST |
| service | fastapi | minikube | guhan | v1.32.0 | 09 Jan 24 10:32 IST |                     |
|---------|---------|----------|-------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2024/01/09 10:18:51
Running on machine: guhan-Lenovo-ideapad-530S-15IKB
Binary: Built with gc go1.21.3 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0109 10:18:51.298064    8210 out.go:296] Setting OutFile to fd 1 ...
I0109 10:18:51.298692    8210 out.go:348] isatty.IsTerminal(1) = true
I0109 10:18:51.298696    8210 out.go:309] Setting ErrFile to fd 2...
I0109 10:18:51.298701    8210 out.go:348] isatty.IsTerminal(2) = true
I0109 10:18:51.298887    8210 root.go:338] Updating PATH: /home/guhan/.minikube/bin
W0109 10:18:51.299084    8210 root.go:314] Error reading config file at /home/guhan/.minikube/config/config.json: open /home/guhan/.minikube/config/config.json: no such file or directory
I0109 10:18:51.300153    8210 out.go:303] Setting JSON to false
I0109 10:18:51.323942    8210 start.go:128] hostinfo: {"hostname":"guhan-Lenovo-ideapad-530S-15IKB","uptime":1810,"bootTime":1704773922,"procs":294,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"20.04","kernelVersion":"5.15.0-91-generic","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"host","hostId":"abc0f5a4-bd6e-4a4b-84da-d299b571d1dd"}
I0109 10:18:51.324153    8210 start.go:138] virtualization: kvm host
I0109 10:18:51.327114    8210 out.go:177] 😄  minikube v1.32.0 on Ubuntu 20.04
I0109 10:18:51.329474    8210 notify.go:220] Checking for updates...
I0109 10:18:51.331035    8210 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0109 10:18:51.331699    8210 driver.go:378] Setting default libvirt URI to qemu:///system
I0109 10:18:51.366188    8210 docker.go:122] docker version: linux-24.0.7:Docker Engine - Community
I0109 10:18:51.366268    8210 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0109 10:18:51.415556    8210 info.go:266] docker info: {ID:dc92b3e8-aa49-4572-8c7b-c5b1c94d8d1b Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:2 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:26 OomKillDisable:true NGoroutines:41 SystemTime:2024-01-09 10:18:51.407925985 +0530 IST LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:0 KernelVersion:5.15.0-91-generic OperatingSystem:Ubuntu 20.04.6 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8226156544 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:guhan-Lenovo-ideapad-530S-15IKB Labels:[] ExperimentalBuild:false ServerVersion:24.0.7 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dd1e886e55dd695541fdcd67420c2888645a495 Expected:3dd1e886e55dd695541fdcd67420c2888645a495} RuncCommit:{ID:v1.1.10-0-g18a0cb0 Expected:v1.1.10-0-g18a0cb0} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.21.0]] Warnings:<nil>}}
I0109 10:18:51.415650    8210 docker.go:295] overlay module found
I0109 10:18:51.416470    8210 out.go:177] ✨  Using the docker driver based on existing profile
I0109 10:18:51.417603    8210 start.go:298] selected driver: docker
I0109 10:18:51.417608    8210 start.go:902] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/guhan:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0109 10:18:51.417664    8210 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0109 10:18:51.417731    8210 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0109 10:18:51.465769    8210 info.go:266] docker info: {ID:dc92b3e8-aa49-4572-8c7b-c5b1c94d8d1b Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:2 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:26 OomKillDisable:true NGoroutines:41 SystemTime:2024-01-09 10:18:51.458288251 +0530 IST LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:0 KernelVersion:5.15.0-91-generic OperatingSystem:Ubuntu 20.04.6 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8226156544 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:guhan-Lenovo-ideapad-530S-15IKB Labels:[] ExperimentalBuild:false ServerVersion:24.0.7 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dd1e886e55dd695541fdcd67420c2888645a495 Expected:3dd1e886e55dd695541fdcd67420c2888645a495} RuncCommit:{ID:v1.1.10-0-g18a0cb0 Expected:v1.1.10-0-g18a0cb0} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.21.0]] Warnings:<nil>}}
I0109 10:18:51.485559    8210 cni.go:84] Creating CNI manager for ""
I0109 10:18:51.485580    8210 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0109 10:18:51.485598    8210 start_flags.go:323] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/guhan:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0109 10:18:51.486803    8210 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0109 10:18:51.487528    8210 cache.go:121] Beginning downloading kic base image for docker with docker
I0109 10:18:51.488245    8210 out.go:177] 🚜  Pulling base image ...
I0109 10:18:51.489007    8210 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon
I0109 10:18:51.489095    8210 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0109 10:18:51.489134    8210 preload.go:148] Found local preload: /home/guhan/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4
I0109 10:18:51.489138    8210 cache.go:56] Caching tarball of preloaded images
I0109 10:18:51.489455    8210 preload.go:174] Found /home/guhan/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0109 10:18:51.489462    8210 cache.go:59] Finished verifying existence of preloaded tar for  v1.28.3 on docker
I0109 10:18:51.489585    8210 profile.go:148] Saving config to /home/guhan/.minikube/profiles/minikube/config.json ...
I0109 10:18:51.505669    8210 cache.go:149] Downloading gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 to local cache
I0109 10:18:51.505793    8210 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local cache directory
I0109 10:18:51.506058    8210 image.go:66] Found gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local cache directory, skipping pull
I0109 10:18:51.506062    8210 image.go:105] gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 exists in cache, skipping pull
I0109 10:18:51.506116    8210 cache.go:152] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 as a tarball
I0109 10:18:51.506123    8210 cache.go:162] Loading gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 from local cache
I0109 10:19:03.554968    8210 cache.go:164] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 from cached tarball
I0109 10:19:03.555033    8210 cache.go:194] Successfully downloaded all kic artifacts
I0109 10:19:03.555123    8210 start.go:365] acquiring machines lock for minikube: {Name:mk209d76279a809d0d3fe1c2c33e19668dce07bd Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0109 10:19:03.555367    8210 start.go:369] acquired machines lock for "minikube" in 192.45µs
I0109 10:19:03.555412    8210 start.go:96] Skipping create...Using existing machine configuration
I0109 10:19:03.555423    8210 fix.go:54] fixHost starting: 
I0109 10:19:03.556827    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:03.594095    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:03.594145    8210 fix.go:102] recreateIfNeeded on minikube: state= err=unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:03.594162    8210 fix.go:107] machineExists: false. err=machine does not exist
I0109 10:19:03.595336    8210 out.go:177] 🤷  docker "minikube" container is missing, will recreate.
I0109 10:19:03.596088    8210 delete.go:124] DEMOLISHING minikube ...
I0109 10:19:03.596193    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:03.614868    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0109 10:19:03.614918    8210 stop.go:75] unable to get state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:03.614936    8210 delete.go:128] stophost failed (probably ok): ssh power off: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:03.615305    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:03.630733    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:03.630788    8210 delete.go:82] Unable to get host status for minikube, assuming it has already been deleted: state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:03.630832    8210 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0109 10:19:03.644383    8210 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0109 10:19:03.644401    8210 kic.go:371] could not find the container minikube to remove it. will try anyways
I0109 10:19:03.644437    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:03.658891    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0109 10:19:03.658969    8210 oci.go:84] error getting container status, will try to delete anyways: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:03.659015    8210 cli_runner.go:164] Run: docker exec --privileged -t minikube /bin/bash -c "sudo init 0"
W0109 10:19:03.673271    8210 cli_runner.go:211] docker exec --privileged -t minikube /bin/bash -c "sudo init 0" returned with exit code 1
I0109 10:19:03.673290    8210 oci.go:650] error shutdown minikube: docker exec --privileged -t minikube /bin/bash -c "sudo init 0": exit status 1
stdout:

stderr:
Error response from daemon: No such container: minikube
I0109 10:19:04.673936    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:04.695739    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:04.695801    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:04.695816    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:04.695859    8210 retry.go:31] will retry after 276.795216ms: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:04.973973    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:05.004179    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:05.004234    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:05.004243    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:05.004277    8210 retry.go:31] will retry after 1.114244668s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:06.119691    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:06.142359    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:06.142409    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:06.142416    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:06.142448    8210 retry.go:31] will retry after 1.352922436s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:07.496389    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:07.517072    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:07.517123    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:07.517130    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:07.517159    8210 retry.go:31] will retry after 1.145273678s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:08.663657    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:08.686015    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:08.686063    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:08.686071    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:08.686098    8210 retry.go:31] will retry after 2.735435683s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:11.421956    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:11.445185    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:11.445273    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:11.445286    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:11.445311    8210 retry.go:31] will retry after 3.237952586s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:14.685851    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:14.708228    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:14.708295    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:14.708307    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:14.708342    8210 retry.go:31] will retry after 3.030596232s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:17.740659    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:17.789065    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:17.789102    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:17.789107    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:17.789126    8210 retry.go:31] will retry after 6.116517002s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:23.908492    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:23.931909    8210 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0109 10:19:23.931967    8210 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0109 10:19:23.931983    8210 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0109 10:19:23.932041    8210 oci.go:88] couldn't shut down minikube (might be okay): verify shutdown: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
 
I0109 10:19:23.932104    8210 cli_runner.go:164] Run: docker rm -f -v minikube
I0109 10:19:23.949367    8210 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0109 10:19:23.964518    8210 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0109 10:19:23.964589    8210 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0109 10:19:24.029143    8210 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0109 10:19:24.029250    8210 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0109 10:19:24.029278    8210 cli_runner.go:164] Run: docker network inspect minikube
W0109 10:19:24.071618    8210 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0109 10:19:24.071653    8210 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0109 10:19:24.071674    8210 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0109 10:19:24.072262    8210 fix.go:114] Sleeping 1 second for extra luck!
I0109 10:19:25.072771    8210 start.go:125] createHost starting for "" (driver="docker")
I0109 10:19:25.082425    8210 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=2200MB) ...
I0109 10:19:25.083412    8210 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0109 10:19:25.083470    8210 client.go:168] LocalClient.Create starting
I0109 10:19:25.084049    8210 main.go:141] libmachine: Reading certificate data from /home/guhan/.minikube/certs/ca.pem
I0109 10:19:25.084512    8210 main.go:141] libmachine: Decoding PEM data...
I0109 10:19:25.084576    8210 main.go:141] libmachine: Parsing certificate...
I0109 10:19:25.084775    8210 main.go:141] libmachine: Reading certificate data from /home/guhan/.minikube/certs/cert.pem
I0109 10:19:25.085190    8210 main.go:141] libmachine: Decoding PEM data...
I0109 10:19:25.085237    8210 main.go:141] libmachine: Parsing certificate...
I0109 10:19:25.085851    8210 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0109 10:19:25.108138    8210 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0109 10:19:25.108197    8210 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0109 10:19:25.108212    8210 cli_runner.go:164] Run: docker network inspect minikube
W0109 10:19:25.126149    8210 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0109 10:19:25.126172    8210 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0109 10:19:25.126194    8210 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0109 10:19:25.126302    8210 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0109 10:19:25.143137    8210 network.go:209] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc0028fc630}
I0109 10:19:25.143161    8210 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0109 10:19:25.143200    8210 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0109 10:19:25.203314    8210 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0109 10:19:25.203330    8210 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0109 10:19:25.203394    8210 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0109 10:19:25.221467    8210 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0109 10:19:25.238077    8210 oci.go:103] Successfully created a docker volume minikube
I0109 10:19:25.238130    8210 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -d /var/lib
I0109 10:19:25.745446    8210 oci.go:107] Successfully prepared a docker volume minikube
I0109 10:19:25.745502    8210 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0109 10:19:25.745529    8210 kic.go:194] Starting extracting preloaded images to volume ...
I0109 10:19:25.745639    8210 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/guhan/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -I lz4 -xf /preloaded.tar -C /extractDir
I0109 10:19:29.982546    8210 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/guhan/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -I lz4 -xf /preloaded.tar -C /extractDir: (4.236838568s)
I0109 10:19:29.982587    8210 kic.go:203] duration metric: took 4.237052 seconds to extract preloaded images to volume
W0109 10:19:29.983180    8210 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
I0109 10:19:29.983408    8210 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0109 10:19:30.062987    8210 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2200mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0
I0109 10:19:30.405959    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0109 10:19:30.424623    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0109 10:19:30.442310    8210 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0109 10:19:30.486028    8210 oci.go:144] the created container "minikube" has a running status.
I0109 10:19:30.486049    8210 kic.go:225] Creating ssh key for kic: /home/guhan/.minikube/machines/minikube/id_rsa...
I0109 10:19:30.671542    8210 kic_runner.go:191] docker (temp): /home/guhan/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0109 10:19:30.690135    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0109 10:19:30.705557    8210 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0109 10:19:30.705570    8210 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0109 10:19:30.773779    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0109 10:19:30.794565    8210 machine.go:88] provisioning docker machine ...
I0109 10:19:30.794754    8210 ubuntu.go:169] provisioning hostname "minikube"
I0109 10:19:30.794827    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:30.809886    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:30.810393    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:30.810403    8210 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0109 10:19:30.810996    8210 main.go:141] libmachine: Error dialing TCP: ssh: handshake failed: read tcp 127.0.0.1:33820->127.0.0.1:32772: read: connection reset by peer
I0109 10:19:34.054838    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0109 10:19:34.055012    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:34.101545    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:34.102156    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:34.102178    8210 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0109 10:19:34.278172    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0109 10:19:34.281128    8210 ubuntu.go:175] set auth options {CertDir:/home/guhan/.minikube CaCertPath:/home/guhan/.minikube/certs/ca.pem CaPrivateKeyPath:/home/guhan/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/guhan/.minikube/machines/server.pem ServerKeyPath:/home/guhan/.minikube/machines/server-key.pem ClientKeyPath:/home/guhan/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/guhan/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/guhan/.minikube}
I0109 10:19:34.281171    8210 ubuntu.go:177] setting up certificates
I0109 10:19:34.281192    8210 provision.go:83] configureAuth start
I0109 10:19:34.281335    8210 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0109 10:19:34.328495    8210 provision.go:138] copyHostCerts
I0109 10:19:34.328593    8210 exec_runner.go:144] found /home/guhan/.minikube/ca.pem, removing ...
I0109 10:19:34.328606    8210 exec_runner.go:203] rm: /home/guhan/.minikube/ca.pem
I0109 10:19:34.328686    8210 exec_runner.go:151] cp: /home/guhan/.minikube/certs/ca.pem --> /home/guhan/.minikube/ca.pem (1074 bytes)
I0109 10:19:34.328888    8210 exec_runner.go:144] found /home/guhan/.minikube/cert.pem, removing ...
I0109 10:19:34.328904    8210 exec_runner.go:203] rm: /home/guhan/.minikube/cert.pem
I0109 10:19:34.328954    8210 exec_runner.go:151] cp: /home/guhan/.minikube/certs/cert.pem --> /home/guhan/.minikube/cert.pem (1119 bytes)
I0109 10:19:34.329120    8210 exec_runner.go:144] found /home/guhan/.minikube/key.pem, removing ...
I0109 10:19:34.329130    8210 exec_runner.go:203] rm: /home/guhan/.minikube/key.pem
I0109 10:19:34.329181    8210 exec_runner.go:151] cp: /home/guhan/.minikube/certs/key.pem --> /home/guhan/.minikube/key.pem (1675 bytes)
I0109 10:19:34.329458    8210 provision.go:112] generating server cert: /home/guhan/.minikube/machines/server.pem ca-key=/home/guhan/.minikube/certs/ca.pem private-key=/home/guhan/.minikube/certs/ca-key.pem org=guhan.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0109 10:19:34.594916    8210 provision.go:172] copyRemoteCerts
I0109 10:19:34.594979    8210 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0109 10:19:34.595010    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:34.610504    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:19:34.709607    8210 ssh_runner.go:362] scp /home/guhan/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0109 10:19:34.732479    8210 ssh_runner.go:362] scp /home/guhan/.minikube/machines/server.pem --> /etc/docker/server.pem (1196 bytes)
I0109 10:19:34.754907    8210 ssh_runner.go:362] scp /home/guhan/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0109 10:19:34.777543    8210 provision.go:86] duration metric: configureAuth took 496.341721ms
I0109 10:19:34.777556    8210 ubuntu.go:193] setting minikube options for container-runtime
I0109 10:19:34.785656    8210 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0109 10:19:34.785696    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:34.802536    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:34.802869    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:34.802876    8210 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0109 10:19:34.980258    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0109 10:19:34.980340    8210 ubuntu.go:71] root file system type: overlay
I0109 10:19:34.980940    8210 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0109 10:19:34.981170    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:35.022404    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:35.022973    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:35.023273    8210 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0109 10:19:35.230802    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0109 10:19:35.231001    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:35.265888    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:35.266368    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:35.266386    8210 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0109 10:19:36.081360    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2023-10-26 09:06:22.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2024-01-09 04:49:35.223483559 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0109 10:19:36.081389    8210 machine.go:91] provisioned docker machine in 5.286811986s
I0109 10:19:36.081402    8210 client.go:171] LocalClient.Create took 10.997923641s
I0109 10:19:36.081422    8210 start.go:167] duration metric: libmachine.API.Create for "minikube" took 10.998025557s
I0109 10:19:36.081431    8210 start.go:300] post-start starting for "minikube" (driver="docker")
I0109 10:19:36.081447    8210 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0109 10:19:36.081520    8210 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0109 10:19:36.081581    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:36.107475    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:19:36.239768    8210 ssh_runner.go:195] Run: cat /etc/os-release
I0109 10:19:36.250658    8210 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0109 10:19:36.250736    8210 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0109 10:19:36.250766    8210 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0109 10:19:36.250780    8210 info.go:137] Remote host: Ubuntu 22.04.3 LTS
I0109 10:19:36.250804    8210 filesync.go:126] Scanning /home/guhan/.minikube/addons for local assets ...
I0109 10:19:36.251120    8210 filesync.go:126] Scanning /home/guhan/.minikube/files for local assets ...
I0109 10:19:36.251293    8210 start.go:303] post-start completed in 169.847885ms
I0109 10:19:36.252144    8210 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0109 10:19:36.300120    8210 profile.go:148] Saving config to /home/guhan/.minikube/profiles/minikube/config.json ...
I0109 10:19:36.300828    8210 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0109 10:19:36.300903    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:36.335300    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:19:36.451987    8210 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0109 10:19:36.467383    8210 start.go:128] duration metric: createHost completed in 11.394564933s
I0109 10:19:36.467577    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0109 10:19:36.511067    8210 fix.go:128] unexpected machine state, will restart: <nil>
I0109 10:19:36.511083    8210 machine.go:88] provisioning docker machine ...
I0109 10:19:36.511119    8210 ubuntu.go:169] provisioning hostname "minikube"
I0109 10:19:36.511178    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:36.534380    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:36.534874    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:36.534886    8210 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0109 10:19:36.741388    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0109 10:19:36.741562    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:36.783365    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:36.783853    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:36.783871    8210 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0109 10:19:36.953110    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0109 10:19:36.953162    8210 ubuntu.go:175] set auth options {CertDir:/home/guhan/.minikube CaCertPath:/home/guhan/.minikube/certs/ca.pem CaPrivateKeyPath:/home/guhan/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/guhan/.minikube/machines/server.pem ServerKeyPath:/home/guhan/.minikube/machines/server-key.pem ClientKeyPath:/home/guhan/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/guhan/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/guhan/.minikube}
I0109 10:19:36.953212    8210 ubuntu.go:177] setting up certificates
I0109 10:19:36.953229    8210 provision.go:83] configureAuth start
I0109 10:19:36.953385    8210 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0109 10:19:36.995536    8210 provision.go:138] copyHostCerts
I0109 10:19:36.995602    8210 exec_runner.go:144] found /home/guhan/.minikube/ca.pem, removing ...
I0109 10:19:36.995609    8210 exec_runner.go:203] rm: /home/guhan/.minikube/ca.pem
I0109 10:19:36.995686    8210 exec_runner.go:151] cp: /home/guhan/.minikube/certs/ca.pem --> /home/guhan/.minikube/ca.pem (1074 bytes)
I0109 10:19:36.995817    8210 exec_runner.go:144] found /home/guhan/.minikube/cert.pem, removing ...
I0109 10:19:36.995822    8210 exec_runner.go:203] rm: /home/guhan/.minikube/cert.pem
I0109 10:19:36.995863    8210 exec_runner.go:151] cp: /home/guhan/.minikube/certs/cert.pem --> /home/guhan/.minikube/cert.pem (1119 bytes)
I0109 10:19:36.995969    8210 exec_runner.go:144] found /home/guhan/.minikube/key.pem, removing ...
I0109 10:19:36.995974    8210 exec_runner.go:203] rm: /home/guhan/.minikube/key.pem
I0109 10:19:36.996012    8210 exec_runner.go:151] cp: /home/guhan/.minikube/certs/key.pem --> /home/guhan/.minikube/key.pem (1675 bytes)
I0109 10:19:36.996109    8210 provision.go:112] generating server cert: /home/guhan/.minikube/machines/server.pem ca-key=/home/guhan/.minikube/certs/ca.pem private-key=/home/guhan/.minikube/certs/ca-key.pem org=guhan.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0109 10:19:37.516484    8210 provision.go:172] copyRemoteCerts
I0109 10:19:37.516529    8210 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0109 10:19:37.516560    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:37.531593    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:19:37.635373    8210 ssh_runner.go:362] scp /home/guhan/.minikube/machines/server.pem --> /etc/docker/server.pem (1196 bytes)
I0109 10:19:37.701734    8210 ssh_runner.go:362] scp /home/guhan/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0109 10:19:37.768703    8210 ssh_runner.go:362] scp /home/guhan/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0109 10:19:37.820052    8210 provision.go:86] duration metric: configureAuth took 866.808442ms
I0109 10:19:37.820072    8210 ubuntu.go:193] setting minikube options for container-runtime
I0109 10:19:37.820379    8210 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0109 10:19:37.820442    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:37.844760    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:37.845307    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:37.845319    8210 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0109 10:19:38.014448    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0109 10:19:38.014490    8210 ubuntu.go:71] root file system type: overlay
I0109 10:19:38.014873    8210 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0109 10:19:38.015047    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:38.056846    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:38.057394    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:38.057673    8210 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0109 10:19:38.271375    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0109 10:19:38.271564    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:38.318752    8210 main.go:141] libmachine: Using SSH client type: native
I0109 10:19:38.319355    8210 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0109 10:19:38.319380    8210 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0109 10:19:38.516186    8210 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0109 10:19:38.516268    8210 machine.go:91] provisioned docker machine in 2.00516591s
I0109 10:19:38.516337    8210 start.go:300] post-start starting for "minikube" (driver="docker")
I0109 10:19:38.516364    8210 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0109 10:19:38.516539    8210 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0109 10:19:38.516643    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:38.550533    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:19:38.671553    8210 ssh_runner.go:195] Run: cat /etc/os-release
I0109 10:19:38.683111    8210 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0109 10:19:38.683179    8210 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0109 10:19:38.683206    8210 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0109 10:19:38.683221    8210 info.go:137] Remote host: Ubuntu 22.04.3 LTS
I0109 10:19:38.683243    8210 filesync.go:126] Scanning /home/guhan/.minikube/addons for local assets ...
I0109 10:19:38.683388    8210 filesync.go:126] Scanning /home/guhan/.minikube/files for local assets ...
I0109 10:19:38.683464    8210 start.go:303] post-start completed in 167.11185ms
I0109 10:19:38.683582    8210 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0109 10:19:38.683675    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:38.739122    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:19:38.867702    8210 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0109 10:19:38.882841    8210 fix.go:56] fixHost completed within 35.327400255s
I0109 10:19:38.882879    8210 start.go:83] releasing machines lock for "minikube", held for 35.327486667s
I0109 10:19:38.883052    8210 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0109 10:19:38.923134    8210 ssh_runner.go:195] Run: cat /version.json
I0109 10:19:38.923193    8210 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0109 10:19:38.923197    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:38.923266    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:19:38.941561    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:19:38.943180    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:19:39.385782    8210 ssh_runner.go:195] Run: systemctl --version
I0109 10:19:39.395965    8210 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0109 10:19:39.401315    8210 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0109 10:19:39.439721    8210 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0109 10:19:39.439827    8210 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0109 10:19:39.478031    8210 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0109 10:19:39.478052    8210 start.go:472] detecting cgroup driver to use...
I0109 10:19:39.478086    8210 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0109 10:19:39.478427    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0109 10:19:39.503623    8210 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0109 10:19:39.518803    8210 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0109 10:19:39.534281    8210 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0109 10:19:39.534352    8210 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0109 10:19:39.549458    8210 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0109 10:19:39.564213    8210 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0109 10:19:39.579166    8210 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0109 10:19:39.593972    8210 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0109 10:19:39.608926    8210 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0109 10:19:39.624130    8210 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0109 10:19:39.637554    8210 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0109 10:19:39.650720    8210 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0109 10:19:39.771206    8210 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0109 10:19:39.907160    8210 start.go:472] detecting cgroup driver to use...
I0109 10:19:39.907197    8210 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0109 10:19:39.907270    8210 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0109 10:19:39.924578    8210 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0109 10:19:39.924639    8210 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0109 10:19:39.938364    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0109 10:19:39.955237    8210 ssh_runner.go:195] Run: which cri-dockerd
I0109 10:19:39.958837    8210 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0109 10:19:39.967305    8210 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0109 10:19:40.028738    8210 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0109 10:19:40.160399    8210 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0109 10:19:40.262077    8210 docker.go:560] configuring docker to use "cgroupfs" as cgroup driver...
I0109 10:19:40.262185    8210 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0109 10:19:40.278618    8210 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0109 10:19:40.362201    8210 ssh_runner.go:195] Run: sudo systemctl restart docker
I0109 10:19:40.635817    8210 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0109 10:19:40.727136    8210 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0109 10:19:40.803725    8210 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0109 10:19:40.891347    8210 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0109 10:19:40.977026    8210 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0109 10:19:40.989629    8210 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0109 10:19:41.081317    8210 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0109 10:19:41.276241    8210 start.go:519] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0109 10:19:41.276372    8210 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0109 10:19:41.280635    8210 start.go:540] Will wait 60s for crictl version
I0109 10:19:41.280692    8210 ssh_runner.go:195] Run: which crictl
I0109 10:19:41.284523    8210 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0109 10:19:41.404909    8210 start.go:556] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.7
RuntimeApiVersion:  v1
I0109 10:19:41.404996    8210 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0109 10:19:41.466333    8210 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0109 10:19:41.491583    8210 out.go:204] 🐳  Preparing Kubernetes v1.28.3 on Docker 24.0.7 ...
I0109 10:19:41.491678    8210 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0109 10:19:41.507553    8210 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0109 10:19:41.511294    8210 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0109 10:19:41.522709    8210 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0109 10:19:41.522754    8210 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0109 10:19:41.541670    8210 docker.go:671] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0109 10:19:41.541683    8210 docker.go:601] Images already preloaded, skipping extraction
I0109 10:19:41.541728    8210 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0109 10:19:41.558689    8210 docker.go:671] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0109 10:19:41.558699    8210 cache_images.go:84] Images are preloaded, skipping loading
I0109 10:19:41.558749    8210 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0109 10:19:41.609183    8210 cni.go:84] Creating CNI manager for ""
I0109 10:19:41.609200    8210 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0109 10:19:41.609579    8210 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0109 10:19:41.609763    8210 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.28.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0109 10:19:41.609895    8210 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.28.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0109 10:19:41.609952    8210 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.28.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0109 10:19:41.609994    8210 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.28.3
I0109 10:19:41.618721    8210 binaries.go:44] Found k8s binaries, skipping transfer
I0109 10:19:41.618769    8210 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0109 10:19:41.627370    8210 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0109 10:19:41.645128    8210 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0109 10:19:41.662927    8210 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I0109 10:19:41.680431    8210 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0109 10:19:41.683549    8210 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0109 10:19:41.693586    8210 certs.go:56] Setting up /home/guhan/.minikube/profiles/minikube for IP: 192.168.49.2
I0109 10:19:41.693606    8210 certs.go:190] acquiring lock for shared ca certs: {Name:mk017b74147a8fdfe16d3dd96b7bc43a92b9adee Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0109 10:19:41.694045    8210 certs.go:199] skipping minikubeCA CA generation: /home/guhan/.minikube/ca.key
I0109 10:19:41.694205    8210 certs.go:199] skipping proxyClientCA CA generation: /home/guhan/.minikube/proxy-client-ca.key
I0109 10:19:41.694381    8210 certs.go:315] skipping minikube-user signed cert generation: /home/guhan/.minikube/profiles/minikube/client.key
I0109 10:19:41.694546    8210 certs.go:315] skipping minikube signed cert generation: /home/guhan/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I0109 10:19:41.694700    8210 certs.go:315] skipping aggregator signed cert generation: /home/guhan/.minikube/profiles/minikube/proxy-client.key
I0109 10:19:41.694823    8210 certs.go:437] found cert: /home/guhan/.minikube/certs/home/guhan/.minikube/certs/ca-key.pem (1679 bytes)
I0109 10:19:41.694850    8210 certs.go:437] found cert: /home/guhan/.minikube/certs/home/guhan/.minikube/certs/ca.pem (1074 bytes)
I0109 10:19:41.694874    8210 certs.go:437] found cert: /home/guhan/.minikube/certs/home/guhan/.minikube/certs/cert.pem (1119 bytes)
I0109 10:19:41.694898    8210 certs.go:437] found cert: /home/guhan/.minikube/certs/home/guhan/.minikube/certs/key.pem (1675 bytes)
I0109 10:19:41.695395    8210 ssh_runner.go:362] scp /home/guhan/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0109 10:19:41.718907    8210 ssh_runner.go:362] scp /home/guhan/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0109 10:19:41.742235    8210 ssh_runner.go:362] scp /home/guhan/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0109 10:19:41.765704    8210 ssh_runner.go:362] scp /home/guhan/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0109 10:19:41.788831    8210 ssh_runner.go:362] scp /home/guhan/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0109 10:19:41.812093    8210 ssh_runner.go:362] scp /home/guhan/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0109 10:19:41.835898    8210 ssh_runner.go:362] scp /home/guhan/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0109 10:19:41.859680    8210 ssh_runner.go:362] scp /home/guhan/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0109 10:19:41.883127    8210 ssh_runner.go:362] scp /home/guhan/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0109 10:19:41.906637    8210 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0109 10:19:41.924208    8210 ssh_runner.go:195] Run: openssl version
I0109 10:19:41.929430    8210 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0109 10:19:41.938906    8210 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0109 10:19:41.942304    8210 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Jan  8 07:30 /usr/share/ca-certificates/minikubeCA.pem
I0109 10:19:41.942345    8210 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0109 10:19:41.948990    8210 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0109 10:19:41.958492    8210 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0109 10:19:41.962026    8210 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0109 10:19:41.968787    8210 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0109 10:19:41.976417    8210 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0109 10:19:41.983199    8210 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0109 10:19:41.989840    8210 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0109 10:19:41.996377    8210 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0109 10:19:42.003158    8210 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/guhan:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0109 10:19:42.003265    8210 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0109 10:19:42.020734    8210 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0109 10:19:42.029846    8210 kubeadm.go:419] found existing configuration files, will attempt cluster restart
I0109 10:19:42.029858    8210 kubeadm.go:636] restartCluster start
I0109 10:19:42.029894    8210 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0109 10:19:42.038530    8210 kubeadm.go:127] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0109 10:19:42.039289    8210 kubeconfig.go:135] verify returned: extract IP: "minikube" does not appear in /home/guhan/.kube/config
I0109 10:19:42.039380    8210 kubeconfig.go:146] "minikube" context is missing from /home/guhan/.kube/config - will repair!
I0109 10:19:42.039645    8210 lock.go:35] WriteFile acquiring /home/guhan/.kube/config: {Name:mkccbb99a8c3310b97f2f3737bf3c64fac7dbd71 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0109 10:19:42.045491    8210 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0109 10:19:42.054621    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:42.054665    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:42.065009    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:42.065018    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:42.065052    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:42.075135    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:42.575380    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:42.575572    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:42.593534    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:43.075701    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:43.075891    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:43.092943    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:43.576061    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:43.576196    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:43.593510    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:44.076335    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:44.076494    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:44.094458    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:44.575880    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:44.576065    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:44.607581    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:45.076031    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:45.076171    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:45.093408    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:45.576149    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:45.576358    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:45.594155    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:46.076000    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:46.076213    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:46.093866    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:46.575297    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:46.575459    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:46.612128    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:47.076090    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:47.076228    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:47.093736    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:47.575573    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:47.575657    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:47.610477    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:48.075968    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:48.076154    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:48.094417    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:48.576159    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:48.576450    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:48.594860    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:49.076223    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:49.076294    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:49.090483    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:49.575744    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:49.575931    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:49.613506    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:50.076026    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:50.076217    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:50.093775    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:50.575270    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:50.575410    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:50.593060    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:51.075996    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:51.076179    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:51.093644    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:51.576013    8210 api_server.go:166] Checking apiserver status ...
I0109 10:19:51.576172    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0109 10:19:51.607507    8210 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0109 10:19:52.054960    8210 kubeadm.go:611] needs reconfigure: apiserver error: context deadline exceeded
I0109 10:19:52.055028    8210 kubeadm.go:1128] stopping kube-system containers ...
I0109 10:19:52.055216    8210 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0109 10:19:52.090695    8210 docker.go:469] Stopping containers: [f92191830614 940d5cf557f2 dbef7dc6e719 e9b0c6529833 704344ad852a 108104f1d5f0 07b82a9de832 1196420caa19 e3c3f167627a 169fd69e38ff e9f95de60a3c a77f7302b0db 8ec2fc7386e5 5a5a811118a6 e65143f51a91]
I0109 10:19:52.090802    8210 ssh_runner.go:195] Run: docker stop f92191830614 940d5cf557f2 dbef7dc6e719 e9b0c6529833 704344ad852a 108104f1d5f0 07b82a9de832 1196420caa19 e3c3f167627a 169fd69e38ff e9f95de60a3c a77f7302b0db 8ec2fc7386e5 5a5a811118a6 e65143f51a91
I0109 10:19:52.133198    8210 ssh_runner.go:195] Run: sudo systemctl stop kubelet
I0109 10:19:52.162628    8210 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0109 10:19:52.179157    8210 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0109 10:19:52.179229    8210 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0109 10:19:52.195718    8210 kubeadm.go:713] reconfiguring cluster from /var/tmp/minikube/kubeadm.yaml
I0109 10:19:52.195737    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml"
I0109 10:19:52.362379    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase kubeconfig all --config /var/tmp/minikube/kubeadm.yaml"
I0109 10:19:53.387074    8210 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase kubeconfig all --config /var/tmp/minikube/kubeadm.yaml": (1.024675402s)
I0109 10:19:53.387088    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase kubelet-start --config /var/tmp/minikube/kubeadm.yaml"
I0109 10:19:53.556382    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase control-plane all --config /var/tmp/minikube/kubeadm.yaml"
I0109 10:19:53.609578    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase etcd local --config /var/tmp/minikube/kubeadm.yaml"
I0109 10:19:53.656268    8210 api_server.go:52] waiting for apiserver process to appear ...
I0109 10:19:53.656329    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0109 10:19:53.666396    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0109 10:19:54.177759    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0109 10:19:54.677803    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0109 10:19:55.178669    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0109 10:19:55.678616    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0109 10:19:56.177808    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0109 10:19:56.414084    8210 api_server.go:72] duration metric: took 2.75779144s to wait for apiserver process to appear ...
I0109 10:19:56.414129    8210 api_server.go:88] waiting for apiserver healthz status ...
I0109 10:19:56.414181    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:19:56.415334    8210 api_server.go:269] stopped: https://192.168.49.2:8443/healthz: Get "https://192.168.49.2:8443/healthz": dial tcp 192.168.49.2:8443: connect: connection refused
I0109 10:19:56.415407    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:19:56.416129    8210 api_server.go:269] stopped: https://192.168.49.2:8443/healthz: Get "https://192.168.49.2:8443/healthz": dial tcp 192.168.49.2:8443: connect: connection refused
I0109 10:19:56.916737    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:01.917155    8210 api_server.go:269] stopped: https://192.168.49.2:8443/healthz: Get "https://192.168.49.2:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0109 10:20:01.917234    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:03.930746    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
W0109 10:20:03.930760    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
I0109 10:20:03.930772    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:04.222120    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
W0109 10:20:04.222180    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
I0109 10:20:04.416980    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:04.516255    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W0109 10:20:04.516385    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I0109 10:20:04.916872    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:04.938117    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W0109 10:20:04.938167    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I0109 10:20:05.416414    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:05.515893    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W0109 10:20:05.515949    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I0109 10:20:05.917291    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:05.941879    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W0109 10:20:05.941931    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I0109 10:20:06.416354    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:06.442113    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W0109 10:20:06.442175    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I0109 10:20:06.917293    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:06.939992    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W0109 10:20:06.940054    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I0109 10:20:07.416438    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:07.439392    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W0109 10:20:07.439444    8210 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I0109 10:20:07.916367    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:07.935142    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 200:
ok
I0109 10:20:08.020977    8210 api_server.go:141] control plane version: v1.28.3
I0109 10:20:08.021032    8210 api_server.go:131] duration metric: took 11.606881884s to wait for apiserver health ...
I0109 10:20:08.021057    8210 cni.go:84] Creating CNI manager for ""
I0109 10:20:08.021113    8210 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0109 10:20:08.023281    8210 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0109 10:20:08.024797    8210 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0109 10:20:08.128428    8210 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0109 10:20:08.518708    8210 system_pods.go:43] waiting for kube-system pods to appear ...
I0109 10:20:08.649818    8210 system_pods.go:59] 7 kube-system pods found
I0109 10:20:08.649897    8210 system_pods.go:61] "coredns-5dd5756b68-7r62z" [9708e039-0cc2-4152-a28b-50cba77494d3] Running / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I0109 10:20:08.649926    8210 system_pods.go:61] "etcd-minikube" [5bbd05b2-752d-40fe-a3bd-d4e9443bca85] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0109 10:20:08.649961    8210 system_pods.go:61] "kube-apiserver-minikube" [19866e9a-e6aa-4def-8a1c-46e4fdbeeec7] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0109 10:20:08.649999    8210 system_pods.go:61] "kube-controller-manager-minikube" [1274e447-7d3b-4e03-af30-bb7800dbd3ca] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0109 10:20:08.650023    8210 system_pods.go:61] "kube-proxy-rx8c7" [96c2cee6-3ad9-490d-9db3-7b3f45263a43] Running
I0109 10:20:08.650050    8210 system_pods.go:61] "kube-scheduler-minikube" [00b10c06-be6e-4ff2-be69-07f06595302f] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0109 10:20:08.650078    8210 system_pods.go:61] "storage-provisioner" [f2dc48c1-4bce-4551-99ef-8401439ec95a] Running / Ready:ContainersNotReady (containers with unready status: [storage-provisioner]) / ContainersReady:ContainersNotReady (containers with unready status: [storage-provisioner])
I0109 10:20:08.650098    8210 system_pods.go:74] duration metric: took 131.351636ms to wait for pod list to return data ...
I0109 10:20:08.650120    8210 node_conditions.go:102] verifying NodePressure condition ...
I0109 10:20:08.728740    8210 node_conditions.go:122] node storage ephemeral capacity is 490617784Ki
I0109 10:20:08.728819    8210 node_conditions.go:123] node cpu capacity is 8
I0109 10:20:08.728877    8210 node_conditions.go:105] duration metric: took 78.739592ms to run NodePressure ...
I0109 10:20:08.728935    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase addon all --config /var/tmp/minikube/kubeadm.yaml"
I0109 10:20:09.949000    8210 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase addon all --config /var/tmp/minikube/kubeadm.yaml": (1.219998687s)
I0109 10:20:09.949060    8210 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0109 10:20:10.023741    8210 ops.go:34] apiserver oom_adj: -16
I0109 10:20:10.023776    8210 kubeadm.go:640] restartCluster took 27.993901012s
I0109 10:20:10.023802    8210 kubeadm.go:406] StartCluster complete in 28.020642786s
I0109 10:20:10.023856    8210 settings.go:142] acquiring lock: {Name:mke547487a1cd9a58be7be21eb56d06a1de2e191 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0109 10:20:10.024201    8210 settings.go:150] Updating kubeconfig:  /home/guhan/.kube/config
I0109 10:20:10.026759    8210 lock.go:35] WriteFile acquiring /home/guhan/.kube/config: {Name:mkccbb99a8c3310b97f2f3737bf3c64fac7dbd71 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0109 10:20:10.027764    8210 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0109 10:20:10.028077    8210 addons.go:499] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volumesnapshots:false]
I0109 10:20:10.028247    8210 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0109 10:20:10.028364    8210 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0109 10:20:10.028401    8210 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0109 10:20:10.028455    8210 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0109 10:20:10.028472    8210 addons.go:231] Setting addon storage-provisioner=true in "minikube"
W0109 10:20:10.028498    8210 addons.go:240] addon storage-provisioner should already be in state true
I0109 10:20:10.029071    8210 host.go:66] Checking if "minikube" exists ...
I0109 10:20:10.030122    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0109 10:20:10.031909    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0109 10:20:10.041027    8210 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0109 10:20:10.041149    8210 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0109 10:20:10.042982    8210 out.go:177] 🔎  Verifying Kubernetes components...
I0109 10:20:10.044470    8210 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0109 10:20:10.098254    8210 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0109 10:20:10.099583    8210 addons.go:423] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0109 10:20:10.099606    8210 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0109 10:20:10.099734    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:20:10.100061    8210 addons.go:231] Setting addon default-storageclass=true in "minikube"
W0109 10:20:10.100092    8210 addons.go:240] addon default-storageclass should already be in state true
I0109 10:20:10.100164    8210 host.go:66] Checking if "minikube" exists ...
I0109 10:20:10.103019    8210 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0109 10:20:10.161781    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:20:10.165138    8210 addons.go:423] installing /etc/kubernetes/addons/storageclass.yaml
I0109 10:20:10.165157    8210 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0109 10:20:10.165227    8210 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0109 10:20:10.191923    8210 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/guhan/.minikube/machines/minikube/id_rsa Username:docker}
I0109 10:20:10.349134    8210 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0109 10:20:10.542547    8210 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0109 10:20:10.731538    8210 api_server.go:52] waiting for apiserver process to appear ...
I0109 10:20:10.731558    8210 start.go:899] CoreDNS already contains "host.minikube.internal" host record, skipping...
I0109 10:20:10.731686    8210 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0109 10:20:11.849005    8210 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (1.499847812s)
I0109 10:20:11.849056    8210 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: (1.306487913s)
I0109 10:20:11.849090    8210 ssh_runner.go:235] Completed: sudo pgrep -xnf kube-apiserver.*minikube.*: (1.11738808s)
I0109 10:20:11.849099    8210 api_server.go:72] duration metric: took 1.80786562s to wait for apiserver process to appear ...
I0109 10:20:11.849102    8210 api_server.go:88] waiting for apiserver healthz status ...
I0109 10:20:11.849112    8210 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0109 10:20:11.854111    8210 api_server.go:279] https://192.168.49.2:8443/healthz returned 200:
ok
I0109 10:20:11.854899    8210 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0109 10:20:11.856028    8210 addons.go:502] enable addons completed in 1.827973651s: enabled=[storage-provisioner default-storageclass]
I0109 10:20:11.854834    8210 api_server.go:141] control plane version: v1.28.3
I0109 10:20:11.856045    8210 api_server.go:131] duration metric: took 6.934992ms to wait for apiserver health ...
I0109 10:20:11.856051    8210 system_pods.go:43] waiting for kube-system pods to appear ...
I0109 10:20:11.862622    8210 system_pods.go:59] 7 kube-system pods found
I0109 10:20:11.862640    8210 system_pods.go:61] "coredns-5dd5756b68-7r62z" [9708e039-0cc2-4152-a28b-50cba77494d3] Running / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I0109 10:20:11.862645    8210 system_pods.go:61] "etcd-minikube" [5bbd05b2-752d-40fe-a3bd-d4e9443bca85] Running
I0109 10:20:11.862650    8210 system_pods.go:61] "kube-apiserver-minikube" [19866e9a-e6aa-4def-8a1c-46e4fdbeeec7] Running
I0109 10:20:11.862655    8210 system_pods.go:61] "kube-controller-manager-minikube" [1274e447-7d3b-4e03-af30-bb7800dbd3ca] Running
I0109 10:20:11.862660    8210 system_pods.go:61] "kube-proxy-rx8c7" [96c2cee6-3ad9-490d-9db3-7b3f45263a43] Running
I0109 10:20:11.862665    8210 system_pods.go:61] "kube-scheduler-minikube" [00b10c06-be6e-4ff2-be69-07f06595302f] Running
I0109 10:20:11.862669    8210 system_pods.go:61] "storage-provisioner" [f2dc48c1-4bce-4551-99ef-8401439ec95a] Running
I0109 10:20:11.862674    8210 system_pods.go:74] duration metric: took 6.618574ms to wait for pod list to return data ...
I0109 10:20:11.862680    8210 kubeadm.go:581] duration metric: took 1.821446717s to wait for : map[apiserver:true system_pods:true] ...
I0109 10:20:11.862689    8210 node_conditions.go:102] verifying NodePressure condition ...
I0109 10:20:11.865008    8210 node_conditions.go:122] node storage ephemeral capacity is 490617784Ki
I0109 10:20:11.865020    8210 node_conditions.go:123] node cpu capacity is 8
I0109 10:20:11.865029    8210 node_conditions.go:105] duration metric: took 2.335918ms to run NodePressure ...
I0109 10:20:11.865041    8210 start.go:228] waiting for startup goroutines ...
I0109 10:20:11.865049    8210 start.go:233] waiting for cluster config update ...
I0109 10:20:11.865060    8210 start.go:242] writing updated cluster config ...
I0109 10:20:11.865353    8210 ssh_runner.go:195] Run: rm -f paused
I0109 10:20:11.869507    8210 out.go:177] 💡  kubectl not found. If you need it, try: 'minikube kubectl -- get pods -A'
I0109 10:20:11.870456    8210 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

* 
* ==> Docker <==
* Jan 09 04:49:40 minikube dockerd[1080]: time="2024-01-09T04:49:40.373623973Z" level=info msg="Daemon shutdown complete"
Jan 09 04:49:40 minikube dockerd[1080]: time="2024-01-09T04:49:40.373686425Z" level=info msg="stopping event stream following graceful shutdown" error="context canceled" module=libcontainerd namespace=plugins.moby
Jan 09 04:49:40 minikube systemd[1]: docker.service: Deactivated successfully.
Jan 09 04:49:40 minikube systemd[1]: Stopped Docker Application Container Engine.
Jan 09 04:49:40 minikube systemd[1]: Starting Docker Application Container Engine...
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.419526966Z" level=info msg="Starting up"
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.435286866Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.459466658Z" level=info msg="Loading containers: start."
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.568458766Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.603751321Z" level=info msg="Loading containers: done."
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.612140519Z" level=info msg="Docker daemon" commit=311b9ff graphdriver=overlay2 version=24.0.7
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.612190140Z" level=info msg="Daemon has completed initialization"
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.633744776Z" level=info msg="API listen on /var/run/docker.sock"
Jan 09 04:49:40 minikube dockerd[1286]: time="2024-01-09T04:49:40.633808059Z" level=info msg="API listen on [::]:2376"
Jan 09 04:49:40 minikube systemd[1]: Started Docker Application Container Engine.
Jan 09 04:49:41 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Start docker client with request timeout 0s"
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Hairpin mode is set to hairpin-veth"
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Loaded network plugin cni"
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Docker cri networking managed by network plugin cni"
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Docker Info: &{ID:fc5938ec-6167-4073-b23e-c6e02c8c68bd Containers:15 ContainersRunning:0 ContainersPaused:0 ContainersStopped:15 Images:8 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:[] Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:[] Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6tables:true Debug:false NFd:25 OomKillDisable:true NGoroutines:35 SystemTime:2024-01-09T04:49:41.265694651Z LoggingDriver:json-file CgroupDriver:cgroupfs CgroupVersion:1 NEventsListener:0 KernelVersion:5.15.0-91-generic OperatingSystem:Ubuntu 22.04.3 LTS (containerized) OSVersion:22.04 OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:0xc0002b6070 NCPU:8 MemTotal:8226156544 GenericResources:[] DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy:control-plane.minikube.internal Name:minikube Labels:[provider=docker] ExperimentalBuild:false ServerVersion:24.0.7 ClusterStore: ClusterAdvertise: Runtimes:map[io.containerd.runc.v2:{Path:runc Args:[] Shim:<nil>} runc:{Path:runc Args:[] Shim:<nil>}] DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:[] Nodes:0 Managers:0 Cluster:<nil> Warnings:[]} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:61f9fd88f79f081d64d6fa3bb1a0dc71ec870523 Expected:61f9fd88f79f081d64d6fa3bb1a0dc71ec870523} RuncCommit:{ID:v1.1.9-0-gccaecfc Expected:v1.1.9-0-gccaecfc} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: DefaultAddressPools:[] Warnings:[]}"
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Setting cgroupDriver cgroupfs"
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Jan 09 04:49:41 minikube cri-dockerd[1503]: time="2024-01-09T04:49:41Z" level=info msg="Start cri-dockerd grpc backend"
Jan 09 04:49:41 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Jan 09 04:49:53 minikube cri-dockerd[1503]: time="2024-01-09T04:49:53Z" level=info msg="Failed to read pod IP from plugin/docker: networkPlugin cni failed on the status hook for pod \"coredns-5dd5756b68-7r62z_kube-system\": CNI failed to retrieve network namespace path: cannot find network namespace for the terminated container \"e9b0c6529833e3652bbe91bfadc76ec5b2d8112b4094f536fd77ea7c0adcfa15\""
Jan 09 04:49:54 minikube cri-dockerd[1503]: time="2024-01-09T04:49:54Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/4c09fa9d201866781ed5013e427b1a556d98d442166d49c5c94e3e789a76d010/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jan 09 04:49:54 minikube cri-dockerd[1503]: time="2024-01-09T04:49:54Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/7dbfd87e4dea631da7e7eda63059db2136b218f23c7ab981596fcd3eb099dd4d/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jan 09 04:49:54 minikube cri-dockerd[1503]: time="2024-01-09T04:49:54Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/e7dc1f45f53de3611469e9c68271a1ccf8dfeb554a136d285a2b0c053614cfd5/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jan 09 04:49:55 minikube cri-dockerd[1503]: time="2024-01-09T04:49:54Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/59e94a5d5cfd788771d156e01635bb5e1181b798d481b1f0688f934051eea233/resolv.conf as [nameserver 192.168.49.1 options trust-ad ndots:0 edns0]"
Jan 09 04:50:04 minikube cri-dockerd[1503]: time="2024-01-09T04:50:04Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Jan 09 04:50:06 minikube cri-dockerd[1503]: time="2024-01-09T04:50:06Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/f858d8e08221409d2130d6aadf294303c234adc4c0a280fd0bea2772cd750fb7/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jan 09 04:50:06 minikube cri-dockerd[1503]: time="2024-01-09T04:50:06Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/a259d49558b591636e8800bbee385b59ed37739c02b2ba18a9753dfff12f5c90/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jan 09 04:50:07 minikube cri-dockerd[1503]: time="2024-01-09T04:50:07Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/2ec9dccb654b6fc30499a805fb366604606915468e42e68eeb4c81e0a41ff210/resolv.conf as [nameserver 192.168.49.1 options edns0 trust-ad ndots:0]"
Jan 09 04:50:08 minikube cri-dockerd[1503]: time="2024-01-09T04:50:08Z" level=info msg="Failed to read pod IP from plugin/docker: networkPlugin cni failed on the status hook for pod \"coredns-5dd5756b68-7r62z_kube-system\": unexpected command output Device \"eth0\" does not exist.\n with error: exit status 1"
Jan 09 04:50:08 minikube cri-dockerd[1503]: time="2024-01-09T04:50:08Z" level=info msg="Failed to read pod IP from plugin/docker: networkPlugin cni failed on the status hook for pod \"coredns-5dd5756b68-7r62z_kube-system\": unexpected command output Device \"eth0\" does not exist.\n with error: exit status 1"
Jan 09 04:50:10 minikube cri-dockerd[1503]: time="2024-01-09T04:50:10Z" level=info msg="Failed to read pod IP from plugin/docker: networkPlugin cni failed on the status hook for pod \"coredns-5dd5756b68-7r62z_kube-system\": unexpected command output Device \"eth0\" does not exist.\n with error: exit status 1"
Jan 09 04:50:18 minikube dockerd[1286]: time="2024-01-09T04:50:18.226007900Z" level=info msg="ignoring event" container=cf8a194ccad9c800d9e6a2663be87f1266dfd40a18c85bf0e86f53cf2f1c00e8 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jan 09 04:50:22 minikube dockerd[1286]: time="2024-01-09T04:50:22.427024464Z" level=info msg="ignoring event" container=24a76c47fdacf6d571b4ca1a8e92cb58155b49343fe2d9b59441d4b689e68b45 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jan 09 04:50:22 minikube dockerd[1286]: time="2024-01-09T04:50:22.482442101Z" level=info msg="ignoring event" container=2ec9dccb654b6fc30499a805fb366604606915468e42e68eeb4c81e0a41ff210 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jan 09 04:50:22 minikube cri-dockerd[1503]: time="2024-01-09T04:50:22Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/9581c4d34770252ba357b36a2beac86759d23c1f52accc3733ff5e60f29f197b/resolv.conf as [nameserver 192.168.49.1 options ndots:0 edns0 trust-ad]"
Jan 09 04:55:13 minikube cri-dockerd[1503]: time="2024-01-09T04:55:13Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/43b003e861bb0406be48e626b7f09ff689dd597802e8524ec2385c36d63bc980/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Jan 09 04:55:17 minikube dockerd[1286]: time="2024-01-09T04:55:17.182481428Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jan 09 04:55:17 minikube dockerd[1286]: time="2024-01-09T04:55:17.182572644Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jan 09 04:55:32 minikube dockerd[1286]: time="2024-01-09T04:55:32.022367596Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jan 09 04:55:32 minikube dockerd[1286]: time="2024-01-09T04:55:32.022614316Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jan 09 04:56:00 minikube dockerd[1286]: time="2024-01-09T04:56:00.902880630Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jan 09 04:56:00 minikube dockerd[1286]: time="2024-01-09T04:56:00.902979849Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jan 09 04:56:54 minikube dockerd[1286]: time="2024-01-09T04:56:54.287598064Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jan 09 04:56:54 minikube dockerd[1286]: time="2024-01-09T04:56:54.287631452Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jan 09 04:58:10 minikube cri-dockerd[1503]: time="2024-01-09T04:58:10Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/47a88d25a6c176a308702c57c4b507422728d55baef857f42af2f7d63c828dc6/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Jan 09 04:58:25 minikube cri-dockerd[1503]: time="2024-01-09T04:58:25Z" level=info msg="Pulling image postgres:latest: dc71bc844158: Downloading [==========================================>        ]  92.43MB/108.6MB"
Jan 09 04:58:35 minikube cri-dockerd[1503]: time="2024-01-09T04:58:35Z" level=info msg="Pulling image postgres:latest: dc71bc844158: Extracting [================================================>  ]  104.7MB/108.6MB"
Jan 09 04:58:35 minikube cri-dockerd[1503]: time="2024-01-09T04:58:35Z" level=info msg="Stop pulling image postgres:latest: Status: Downloaded newer image for postgres:latest"
Jan 09 04:58:39 minikube dockerd[1286]: time="2024-01-09T04:58:39.817989187Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jan 09 04:58:39 minikube dockerd[1286]: time="2024-01-09T04:58:39.818105752Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jan 09 05:01:29 minikube dockerd[1286]: time="2024-01-09T05:01:29.182501397Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jan 09 05:01:29 minikube dockerd[1286]: time="2024-01-09T05:01:29.182596198Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"

* 
* ==> container status <==
* CONTAINER           IMAGE                                                                              CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
df13cbd7eb7a7       postgres@sha256:b09f2562ab14fcae750cfc5ae457cd97e90c37679f520bc4a84180913de90261   4 minutes ago       Running             postgres                  0                   47a88d25a6c17       postgres-7d6645d7fb-gqcj7
1f0df05f8b10c       6e38f40d628db                                                                      13 minutes ago      Running             storage-provisioner       3                   a259d49558b59       storage-provisioner
0fd8853698f9a       ead0a4a53df89                                                                      13 minutes ago      Running             coredns                   2                   9581c4d347702       coredns-5dd5756b68-7r62z
24a76c47fdacf       ead0a4a53df89                                                                      13 minutes ago      Exited              coredns                   1                   2ec9dccb654b6       coredns-5dd5756b68-7r62z
cf8a194ccad9c       6e38f40d628db                                                                      13 minutes ago      Exited              storage-provisioner       2                   a259d49558b59       storage-provisioner
ff3f03f3a9197       bfc896cf80fba                                                                      13 minutes ago      Running             kube-proxy                1                   f858d8e082214       kube-proxy-rx8c7
6d7b25f9331c8       5374347291230                                                                      13 minutes ago      Running             kube-apiserver            1                   4c09fa9d20186       kube-apiserver-minikube
936936e802d62       6d1b4fd1b182d                                                                      13 minutes ago      Running             kube-scheduler            1                   59e94a5d5cfd7       kube-scheduler-minikube
663998f5e320b       10baa1ca17068                                                                      13 minutes ago      Running             kube-controller-manager   1                   7dbfd87e4dea6       kube-controller-manager-minikube
e760a5a0eaa4c       73deb9a3f7025                                                                      13 minutes ago      Running             etcd                      1                   e7dc1f45f53de       etcd-minikube
dbef7dc6e7192       bfc896cf80fba                                                                      22 hours ago        Exited              kube-proxy                0                   108104f1d5f0e       kube-proxy-rx8c7
1196420caa19f       6d1b4fd1b182d                                                                      22 hours ago        Exited              kube-scheduler            0                   a77f7302b0db6       kube-scheduler-minikube
e3c3f167627ae       10baa1ca17068                                                                      22 hours ago        Exited              kube-controller-manager   0                   8ec2fc7386e53       kube-controller-manager-minikube
169fd69e38fff       73deb9a3f7025                                                                      22 hours ago        Exited              etcd                      0                   e65143f51a915       etcd-minikube
e9f95de60a3c5       5374347291230                                                                      22 hours ago        Exited              kube-apiserver            0                   5a5a811118a6a       kube-apiserver-minikube

* 
* ==> coredns [0fd8853698f9] <==
* .:53
[INFO] plugin/reload: Running configuration SHA512 = 05e3eaddc414b2d71a69b2e2bc6f2681fc1f4d04bcdd3acc1a41457bb7db518208b95ddfc4c9fffedc59c25a8faf458be1af4915a4a3c0d6777cb7a346bc5d86
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
[INFO] 127.0.0.1:39442 - 19157 "HINFO IN 1079150531256782536.3204340276130725073. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.050321314s

* 
* ==> coredns [24a76c47fdac] <==
* [INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] SIGTERM: Shutting down servers then terminating
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = 05e3eaddc414b2d71a69b2e2bc6f2681fc1f4d04bcdd3acc1a41457bb7db518208b95ddfc4c9fffedc59c25a8faf458be1af4915a4a3c0d6777cb7a346bc5d86
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
[INFO] plugin/health: Going into lameduck mode for 5s
[WARNING] plugin/kubernetes: Kubernetes API connection failure: Get "https://10.96.0.1:443/version": dial tcp 10.96.0.1:443: connect: network is unreachable
[INFO] 127.0.0.1:53346 - 62718 "HINFO IN 157939825747275602.7560523738502128056. udp 56 false 512" - - 0 5.00028993s
[ERROR] plugin/errors: 2 157939825747275602.7560523738502128056. HINFO: dial udp 192.168.49.1:53: connect: network is unreachable
[INFO] 127.0.0.1:60777 - 40433 "HINFO IN 157939825747275602.7560523738502128056. udp 56 false 512" - - 0 5.000084294s
[ERROR] plugin/errors: 2 157939825747275602.7560523738502128056. HINFO: dial udp 192.168.49.1:53: connect: network is unreachable

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2024_01_08T13_00_39_0700
                    minikube.k8s.io/version=v1.32.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Mon, 08 Jan 2024 07:30:34 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Tue, 09 Jan 2024 05:03:31 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Tue, 09 Jan 2024 04:58:55 +0000   Mon, 08 Jan 2024 07:30:28 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Tue, 09 Jan 2024 04:58:55 +0000   Mon, 08 Jan 2024 07:30:28 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Tue, 09 Jan 2024 04:58:55 +0000   Mon, 08 Jan 2024 07:30:28 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Tue, 09 Jan 2024 04:58:55 +0000   Mon, 08 Jan 2024 07:30:50 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                8
  ephemeral-storage:  490617784Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             8033356Ki
  pods:               110
Allocatable:
  cpu:                8
  ephemeral-storage:  490617784Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             8033356Ki
  pods:               110
System Info:
  Machine ID:                 cc4bf0c3fa724b76bb64947cf95f326e
  System UUID:                af946d50-0d3d-41a1-945c-3c60efcbc2a8
  Boot ID:                    644caac4-6b78-40dd-afbc-4a89f3e30bd3
  Kernel Version:             5.15.0-91-generic
  OS Image:                   Ubuntu 22.04.3 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://24.0.7
  Kubelet Version:            v1.28.3
  Kube-Proxy Version:         v1.28.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (9 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  default                     fastapi-7f9bb9b996-z4hl5            0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         8m20s
  default                     postgres-7d6645d7fb-gqcj7           0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         5m22s
  kube-system                 coredns-5dd5756b68-7r62z            100m (1%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (2%!)(MISSING)     21h
  kube-system                 etcd-minikube                       100m (1%!)(MISSING)     0 (0%!)(MISSING)      100Mi (1%!)(MISSING)       0 (0%!)(MISSING)         21h
  kube-system                 kube-apiserver-minikube             250m (3%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         21h
  kube-system                 kube-controller-manager-minikube    200m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         21h
  kube-system                 kube-proxy-rx8c7                    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         21h
  kube-system                 kube-scheduler-minikube             100m (1%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         21h
  kube-system                 storage-provisioner                 0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         21h
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (9%!)(MISSING)   0 (0%!)(MISSING)
  memory             170Mi (2%!)(MISSING)  170Mi (2%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age                From             Message
  ----    ------                   ----               ----             -------
  Normal  Starting                 21h                kube-proxy       
  Normal  Starting                 13m                kube-proxy       
  Normal  NodeHasSufficientMemory  21h (x9 over 21h)  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    21h (x7 over 21h)  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     21h (x7 over 21h)  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeAllocatableEnforced  21h                kubelet          Updated Node Allocatable limit across pods
  Normal  NodeNotReady             21h                kubelet          Node minikube status is now: NodeNotReady
  Normal  Starting                 21h                kubelet          Starting kubelet.
  Normal  NodeHasNoDiskPressure    21h                kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     21h                kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeHasSufficientMemory  21h                kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeAllocatableEnforced  21h                kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                21h                kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           21h                node-controller  Node minikube event: Registered Node minikube in Controller
  Normal  Starting                 13m                kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  13m (x8 over 13m)  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    13m (x8 over 13m)  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     13m (x7 over 13m)  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeAllocatableEnforced  13m                kubelet          Updated Node Allocatable limit across pods
  Normal  RegisteredNode           13m                node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [Jan 9 04:18] [Firmware Bug]: TSC ADJUST: CPU0: -1780070653 force to 0
[  +0.000000] x86/cpu: SGX disabled by BIOS.
[  -0.170965] [Firmware Bug]: TSC ADJUST differs within socket(s), fixing all errors
[  +0.179298]  #2 #3 #4
[  +0.008654] MDS CPU bug present and SMT on, data leak possible. See https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/mds.html for more details.
[  +0.000000] MMIO Stale Data CPU bug present and SMT on, data leak possible. See https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/processor_mmio_stale_data.html for more details.
[  +0.000000]  #5 #6 #7
[  +0.375483] hpet_acpi_add: no address or irqs in _CRS
[  +0.014310] i8042: PNP: PS/2 appears to have AUX port disabled, if this is incorrect please boot with i8042.nopnp
[  +0.009813] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA measurements will not be recorded in the IMA log.
[  +0.000250] platform eisa.0: EISA: Cannot allocate resource for mainboard
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 1
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 2
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 3
[  +0.000002] platform eisa.0: Cannot allocate resource for EISA slot 4
[  +0.000002] platform eisa.0: Cannot allocate resource for EISA slot 5
[  +0.000003] platform eisa.0: Cannot allocate resource for EISA slot 6
[  +0.000002] platform eisa.0: Cannot allocate resource for EISA slot 7
[  +0.000002] platform eisa.0: Cannot allocate resource for EISA slot 8
[  +0.163419] integrity: Problem loading X.509 certificate -65
[  +0.267307] wmi_bus wmi_bus-PNP0C14:00: WQ data block query control method not found
[  +0.000010] wmi_bus wmi_bus-PNP0C14:00: WQ data block query control method not found
[  +0.000008] wmi_bus wmi_bus-PNP0C14:00: WQ data block query control method not found
[  +0.000009] wmi_bus wmi_bus-PNP0C14:00: WQ data block query control method not found
[  +1.910711] ACPI Warning: \_SB.PCI0.RP01.PXSX._DSM: Argument #4 type mismatch - Found [Buffer], ACPI requires [Package] (20210730/nsarguments-61)
[  +2.288832] kauditd_printk_skb: 12 callbacks suppressed
[  +6.948035] kauditd_printk_skb: 11 callbacks suppressed
[Jan 9 04:24] kauditd_printk_skb: 5 callbacks suppressed
[Jan 9 04:53] rtw_8822be 0000:02:00.0: firmware failed to leave lps state
[Jan 9 04:57] rtw_8822be 0000:02:00.0: firmware failed to leave lps state
[Jan 9 05:00] rtw_8822be 0000:02:00.0: firmware failed to leave lps state

* 
* ==> etcd [169fd69e38ff] <==
* {"level":"warn","ts":"2024-01-08T07:30:27.853493Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-01-08T07:30:27.853764Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"warn","ts":"2024-01-08T07:30:27.854Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-01-08T07:30:27.854228Z","caller":"embed/etcd.go:127","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-01-08T07:30:27.85438Z","caller":"embed/etcd.go:495","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-01-08T07:30:27.855585Z","caller":"embed/etcd.go:135","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2024-01-08T07:30:27.856005Z","caller":"embed/etcd.go:309","msg":"starting an etcd server","etcd-version":"3.5.9","git-sha":"bdbbde998","go-version":"go1.19.9","go-os":"linux","go-arch":"amd64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2024-01-08T07:30:27.860296Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"3.118342ms"}
{"level":"info","ts":"2024-01-08T07:30:27.868071Z","caller":"etcdserver/raft.go:495","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2024-01-08T07:30:27.868351Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2024-01-08T07:30:27.868508Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2024-01-08T07:30:27.86857Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2024-01-08T07:30:27.868622Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2024-01-08T07:30:27.86877Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2024-01-08T07:30:27.875503Z","caller":"auth/store.go:1238","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2024-01-08T07:30:27.879331Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2024-01-08T07:30:27.881501Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2024-01-08T07:30:27.952569Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.9","cluster-version":"to_be_decided"}
{"level":"info","ts":"2024-01-08T07:30:27.954127Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2024-01-08T07:30:27.954293Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2024-01-08T07:30:27.955158Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2024-01-08T07:30:27.956515Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2024-01-08T07:30:27.956671Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2024-01-08T07:30:27.958155Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-01-08T07:30:27.964459Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-01-08T07:30:27.965282Z","caller":"embed/etcd.go:278","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2024-01-08T07:30:27.965411Z","caller":"embed/etcd.go:855","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2024-01-08T07:30:27.96578Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-01-08T07:30:27.965824Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-01-08T07:30:28.569309Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2024-01-08T07:30:28.569427Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2024-01-08T07:30:28.569536Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2024-01-08T07:30:28.569643Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2024-01-08T07:30:28.569685Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-01-08T07:30:28.569746Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2024-01-08T07:30:28.569801Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-01-08T07:30:28.570741Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2024-01-08T07:30:28.571441Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2024-01-08T07:30:28.571453Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-01-08T07:30:28.571506Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-01-08T07:30:28.572089Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2024-01-08T07:30:28.57525Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-01-08T07:30:28.57586Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2024-01-08T07:30:28.578811Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2024-01-08T07:30:28.579122Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2024-01-08T07:30:28.573783Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-01-08T07:30:28.581482Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2024-01-08T07:31:55.549903Z","caller":"osutil/interrupt_unix.go:64","msg":"received signal; shutting down","signal":"terminated"}
{"level":"info","ts":"2024-01-08T07:31:55.550097Z","caller":"embed/etcd.go:376","msg":"closing etcd server","name":"minikube","data-dir":"/var/lib/minikube/etcd","advertise-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"]}
{"level":"warn","ts":"2024-01-08T07:31:55.550478Z","caller":"embed/serve.go:212","msg":"stopping secure grpc server due to error","error":"accept tcp 127.0.0.1:2379: use of closed network connection"}
{"level":"warn","ts":"2024-01-08T07:31:55.55069Z","caller":"embed/serve.go:214","msg":"stopped secure grpc server due to error","error":"accept tcp 127.0.0.1:2379: use of closed network connection"}
{"level":"warn","ts":"2024-01-08T07:31:55.667225Z","caller":"embed/serve.go:212","msg":"stopping secure grpc server due to error","error":"accept tcp 192.168.49.2:2379: use of closed network connection"}
{"level":"warn","ts":"2024-01-08T07:31:55.667346Z","caller":"embed/serve.go:214","msg":"stopped secure grpc server due to error","error":"accept tcp 192.168.49.2:2379: use of closed network connection"}
{"level":"info","ts":"2024-01-08T07:31:55.667554Z","caller":"etcdserver/server.go:1465","msg":"skipped leadership transfer for single voting member cluster","local-member-id":"aec36adc501070cc","current-leader-member-id":"aec36adc501070cc"}
{"level":"info","ts":"2024-01-08T07:31:55.75165Z","caller":"embed/etcd.go:579","msg":"stopping serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-01-08T07:31:55.751896Z","caller":"embed/etcd.go:584","msg":"stopped serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-01-08T07:31:55.751951Z","caller":"embed/etcd.go:378","msg":"closed etcd server","name":"minikube","data-dir":"/var/lib/minikube/etcd","advertise-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"]}

* 
* ==> etcd [e760a5a0eaa4] <==
* {"level":"warn","ts":"2024-01-09T04:49:56.029302Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-01-09T04:49:56.030358Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"info","ts":"2024-01-09T04:49:56.032805Z","caller":"etcdmain/etcd.go:116","msg":"server has been already initialized","data-dir":"/var/lib/minikube/etcd","dir-type":"member"}
{"level":"warn","ts":"2024-01-09T04:49:56.033109Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-01-09T04:49:56.033404Z","caller":"embed/etcd.go:127","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-01-09T04:49:56.033842Z","caller":"embed/etcd.go:495","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-01-09T04:49:56.038082Z","caller":"embed/etcd.go:135","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2024-01-09T04:49:56.040893Z","caller":"embed/etcd.go:309","msg":"starting an etcd server","etcd-version":"3.5.9","git-sha":"bdbbde998","go-version":"go1.19.9","go-os":"linux","go-arch":"amd64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":true,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"","initial-cluster-state":"new","initial-cluster-token":"","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2024-01-09T04:49:56.137128Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"94.999866ms"}
{"level":"info","ts":"2024-01-09T04:49:56.224812Z","caller":"etcdserver/server.go:530","msg":"No snapshot found. Recovering WAL from scratch!"}
{"level":"info","ts":"2024-01-09T04:49:56.241175Z","caller":"etcdserver/raft.go:530","msg":"restarting local member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","commit-index":483}
{"level":"info","ts":"2024-01-09T04:49:56.241424Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2024-01-09T04:49:56.241484Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 2"}
{"level":"info","ts":"2024-01-09T04:49:56.24154Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 2, commit: 483, applied: 0, lastindex: 483, lastterm: 2]"}
{"level":"warn","ts":"2024-01-09T04:49:56.313467Z","caller":"auth/store.go:1238","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2024-01-09T04:49:56.328618Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":462}
{"level":"info","ts":"2024-01-09T04:49:56.331078Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2024-01-09T04:49:56.335067Z","caller":"etcdserver/corrupt.go:95","msg":"starting initial corruption check","local-member-id":"aec36adc501070cc","timeout":"7s"}
{"level":"info","ts":"2024-01-09T04:49:56.336265Z","caller":"etcdserver/corrupt.go:165","msg":"initial corruption checking passed; no corruption","local-member-id":"aec36adc501070cc"}
{"level":"info","ts":"2024-01-09T04:49:56.336522Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.9","cluster-version":"to_be_decided"}
{"level":"info","ts":"2024-01-09T04:49:56.337022Z","caller":"etcdserver/server.go:754","msg":"starting initial election tick advance","election-ticks":10}
{"level":"info","ts":"2024-01-09T04:49:56.337548Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2024-01-09T04:49:56.337739Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-01-09T04:49:56.337982Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2024-01-09T04:49:56.338085Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-01-09T04:49:56.412708Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2024-01-09T04:49:56.412911Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2024-01-09T04:49:56.412983Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2024-01-09T04:49:56.418548Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-01-09T04:49:56.418937Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-01-09T04:49:56.419154Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-01-09T04:49:56.419698Z","caller":"embed/etcd.go:278","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2024-01-09T04:49:56.419864Z","caller":"embed/etcd.go:855","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2024-01-09T04:49:57.343948Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 2"}
{"level":"info","ts":"2024-01-09T04:49:57.344075Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 2"}
{"level":"info","ts":"2024-01-09T04:49:57.344195Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-01-09T04:49:57.344247Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 3"}
{"level":"info","ts":"2024-01-09T04:49:57.344373Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 3"}
{"level":"info","ts":"2024-01-09T04:49:57.344538Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 3"}
{"level":"info","ts":"2024-01-09T04:49:57.344579Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 3"}
{"level":"info","ts":"2024-01-09T04:49:57.346501Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-01-09T04:49:57.346542Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-01-09T04:49:57.346516Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2024-01-09T04:49:57.346954Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-01-09T04:49:57.347029Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2024-01-09T04:49:57.351379Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2024-01-09T04:49:57.35174Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2024-01-09T04:59:58.763008Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":782}
{"level":"info","ts":"2024-01-09T04:59:58.768786Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":782,"took":"4.89742ms","hash":2514990186}
{"level":"info","ts":"2024-01-09T04:59:58.768894Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2514990186,"revision":782,"compact-revision":-1}

* 
* ==> kernel <==
*  05:03:32 up 44 min,  0 users,  load average: 0.96, 1.33, 0.98
Linux minikube 5.15.0-91-generic #101~20.04.1-Ubuntu SMP Thu Nov 16 14:22:28 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.3 LTS"

* 
* ==> kube-apiserver [6d7b25f9331c] <==
* I0109 04:50:03.914875       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0109 04:50:03.914881       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0109 04:50:03.915324       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/var/lib/minikube/certs/apiserver.crt::/var/lib/minikube/certs/apiserver.key"
I0109 04:50:03.916101       1 secure_serving.go:213] Serving securely on [::]:8443
I0109 04:50:03.916163       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0109 04:50:03.916232       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0109 04:50:03.916321       1 apf_controller.go:372] Starting API Priority and Fairness config controller
I0109 04:50:03.916364       1 controller.go:78] Starting OpenAPI AggregationController
I0109 04:50:03.916496       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0109 04:50:03.916515       1 handler_discovery.go:412] Starting ResourceDiscoveryManager
I0109 04:50:03.916654       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0109 04:50:03.916257       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0109 04:50:03.916788       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0109 04:50:03.916917       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0109 04:50:03.917065       1 controller.go:134] Starting OpenAPI controller
I0109 04:50:03.917138       1 controller.go:85] Starting OpenAPI V3 controller
I0109 04:50:03.917177       1 naming_controller.go:291] Starting NamingConditionController
I0109 04:50:03.917216       1 establishing_controller.go:76] Starting EstablishingController
I0109 04:50:03.917253       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0109 04:50:03.917293       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0109 04:50:03.917330       1 crd_finalizer.go:266] Starting CRDFinalizer
I0109 04:50:03.917373       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0109 04:50:03.917397       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0109 04:50:03.918812       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0109 04:50:03.919049       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0109 04:50:03.916803       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0109 04:50:03.916709       1 available_controller.go:423] Starting AvailableConditionController
I0109 04:50:03.919714       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0109 04:50:03.916993       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0109 04:50:03.917015       1 aggregator.go:164] waiting for initial CRD sync...
I0109 04:50:03.922551       1 controller.go:116] Starting legacy_token_tracking_controller
I0109 04:50:03.922562       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0109 04:50:03.922594       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0109 04:50:03.922600       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0109 04:50:04.024021       1 shared_informer.go:318] Caches are synced for configmaps
I0109 04:50:04.025757       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0109 04:50:04.027360       1 aggregator.go:166] initial CRD sync complete...
I0109 04:50:04.027889       1 autoregister_controller.go:141] Starting autoregister controller
I0109 04:50:04.028369       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0109 04:50:04.124215       1 apf_controller.go:377] Running API Priority and Fairness config worker
I0109 04:50:04.125010       1 apf_controller.go:380] Running API Priority and Fairness periodic rebalancing process
I0109 04:50:04.127552       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0109 04:50:04.138602       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0109 04:50:04.212904       1 cache.go:39] Caches are synced for autoregister controller
I0109 04:50:04.239299       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0109 04:50:04.318236       1 shared_informer.go:318] Caches are synced for node_authorizer
I0109 04:50:04.318281       1 cache.go:39] Caches are synced for AvailableConditionController controller
E0109 04:50:04.415240       1 controller.go:97] Error removing old endpoints from kubernetes service: no API server IP addresses were listed in storage, refusing to erase all endpoints for the kubernetes Service
I0109 04:50:04.927664       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0109 04:50:09.635592       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0109 04:50:09.666666       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0109 04:50:09.816969       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0109 04:50:09.873332       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0109 04:50:09.922158       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0109 04:50:11.836194       1 controller.go:624] quota admission added evaluator for: endpoints
E0109 04:50:14.819803       1 controller.go:193] "Failed to update lease" err="Operation cannot be fulfilled on leases.coordination.k8s.io \"apiserver-eqt674mfxb4j56mrjjkoe7b7ii\": StorageError: invalid object, Code: 4, Key: /registry/leases/kube-system/apiserver-eqt674mfxb4j56mrjjkoe7b7ii, ResourceVersion: 0, AdditionalErrorMsg: Precondition failed: UID in precondition: caf83e8c-ada5-4203-ace5-939ac919500d, UID in object meta: "
I0109 04:50:19.437939       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0109 04:55:12.711434       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I0109 04:57:44.291604       1 alloc.go:330] "allocated clusterIPs" service="default/fastapi" clusterIPs={"IPv4":"10.111.97.119"}
I0109 04:58:18.623524       1 alloc.go:330] "allocated clusterIPs" service="default/postgres-service" clusterIPs={"IPv4":"10.102.131.25"}

* 
* ==> kube-apiserver [e9f95de60a3c] <==
*   "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W0108 07:32:05.298028       1 logging.go:59] [core] [Channel #22 SubChannel #23] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W0108 07:32:05.314738       1 logging.go:59] [core] [Channel #34 SubChannel #35] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W0108 07:32:05.321642       1 logging.go:59] [core] [Channel #145 SubChannel #146] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W0108 07:32:05.369332       1 logging.go:59] [core] [Channel #70 SubChannel #71] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W0108 07:32:05.382810       1 logging.go:59] [core] [Channel #112 SubChannel #113] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W0108 07:32:05.466440       1 logging.go:59] [core] [Channel #109 SubChannel #110] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W0108 07:32:05.598211       1 logging.go:59] [core] [Channel #148 SubChannel #149] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"

* 
* ==> kube-controller-manager [663998f5e320] <==
* I0109 04:50:19.335259       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0109 04:50:19.342609       1 shared_informer.go:318] Caches are synced for persistent volume
I0109 04:50:19.347093       1 shared_informer.go:318] Caches are synced for service account
I0109 04:50:19.412899       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0109 04:50:19.413678       1 shared_informer.go:318] Caches are synced for deployment
I0109 04:50:19.414334       1 shared_informer.go:318] Caches are synced for taint
I0109 04:50:19.414593       1 shared_informer.go:318] Caches are synced for cronjob
I0109 04:50:19.414591       1 node_lifecycle_controller.go:1225] "Initializing eviction metric for zone" zone=""
I0109 04:50:19.414796       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0109 04:50:19.414972       1 node_lifecycle_controller.go:877] "Missing timestamp for Node. Assuming now as a timestamp" node="minikube"
I0109 04:50:19.415188       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0109 04:50:19.416933       1 shared_informer.go:318] Caches are synced for disruption
I0109 04:50:19.417495       1 event.go:307] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0109 04:50:19.417379       1 node_lifecycle_controller.go:1071] "Controller detected that zone is now in new state" zone="" newState="Normal"
I0109 04:50:19.417426       1 taint_manager.go:211] "Sending events to api server"
I0109 04:50:19.417765       1 shared_informer.go:318] Caches are synced for GC
I0109 04:50:19.417774       1 shared_informer.go:318] Caches are synced for node
I0109 04:50:19.420566       1 range_allocator.go:174] "Sending events to api server"
I0109 04:50:19.421228       1 range_allocator.go:178] "Starting range CIDR allocator"
I0109 04:50:19.421727       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0109 04:50:19.422182       1 shared_informer.go:318] Caches are synced for cidrallocator
I0109 04:50:19.442104       1 shared_informer.go:318] Caches are synced for resource quota
I0109 04:50:19.455204       1 shared_informer.go:318] Caches are synced for resource quota
I0109 04:50:19.457639       1 shared_informer.go:318] Caches are synced for attach detach
I0109 04:50:19.458943       1 shared_informer.go:318] Caches are synced for endpoint
I0109 04:50:19.512919       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0109 04:50:19.720426       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="307.171732ms"
I0109 04:50:19.720968       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="207.949µs"
I0109 04:50:19.920609       1 shared_informer.go:318] Caches are synced for garbage collector
I0109 04:50:19.920669       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0109 04:50:19.928515       1 shared_informer.go:318] Caches are synced for garbage collector
I0109 04:50:23.750637       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="374.224µs"
I0109 04:50:23.779950       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="6.052479ms"
I0109 04:50:23.780052       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="66.477µs"
I0109 04:55:12.713447       1 event.go:307] "Event occurred" object="default/fastapi" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set fastapi-7f9bb9b996 to 1"
I0109 04:55:12.719834       1 event.go:307] "Event occurred" object="default/fastapi-7f9bb9b996" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: fastapi-7f9bb9b996-z4hl5"
I0109 04:55:12.724194       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="10.872018ms"
I0109 04:55:12.730212       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="5.96391ms"
I0109 04:55:12.730301       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="40.703µs"
I0109 04:55:12.739362       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="52.29µs"
I0109 04:55:17.507951       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="154.681µs"
I0109 04:55:27.968401       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="193.779µs"
I0109 04:55:45.968469       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="298.102µs"
I0109 04:55:56.952955       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="160.438µs"
I0109 04:56:12.963280       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="110.96µs"
I0109 04:56:23.953014       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="84.205µs"
I0109 04:57:07.975617       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="241.954µs"
I0109 04:57:18.964185       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="132.059µs"
I0109 04:58:10.304726       1 event.go:307] "Event occurred" object="default/postgres" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set postgres-7d6645d7fb to 1"
I0109 04:58:10.310456       1 event.go:307] "Event occurred" object="default/postgres-7d6645d7fb" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: postgres-7d6645d7fb-gqcj7"
I0109 04:58:10.316614       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/postgres-7d6645d7fb" duration="11.958337ms"
I0109 04:58:10.326859       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/postgres-7d6645d7fb" duration="10.188555ms"
I0109 04:58:10.326927       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/postgres-7d6645d7fb" duration="40.864µs"
I0109 04:58:10.331390       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/postgres-7d6645d7fb" duration="123.548µs"
I0109 04:58:37.112588       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/postgres-7d6645d7fb" duration="5.071187ms"
I0109 04:58:37.112650       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/postgres-7d6645d7fb" duration="37.579µs"
I0109 04:58:53.974377       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="135.12µs"
I0109 04:59:04.960701       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="403.871µs"
I0109 05:01:43.968596       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="379.772µs"
I0109 05:01:56.960120       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/fastapi-7f9bb9b996" duration="224.665µs"

* 
* ==> kube-controller-manager [e3c3f167627a] <==
* I0108 07:30:51.150481       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0108 07:30:51.150796       1 shared_informer.go:318] Caches are synced for cronjob
I0108 07:30:51.150804       1 shared_informer.go:318] Caches are synced for TTL
I0108 07:30:51.154429       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0108 07:30:51.164868       1 shared_informer.go:318] Caches are synced for expand
I0108 07:30:51.173917       1 shared_informer.go:318] Caches are synced for service account
I0108 07:30:51.178541       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0108 07:30:51.180267       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0108 07:30:51.180383       1 shared_informer.go:318] Caches are synced for TTL after finished
I0108 07:30:51.180475       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0108 07:30:51.182564       1 shared_informer.go:318] Caches are synced for PV protection
I0108 07:30:51.185840       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0108 07:30:51.188192       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0108 07:30:51.199001       1 shared_informer.go:318] Caches are synced for node
I0108 07:30:51.199136       1 range_allocator.go:174] "Sending events to api server"
I0108 07:30:51.199223       1 range_allocator.go:178] "Starting range CIDR allocator"
I0108 07:30:51.199237       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0108 07:30:51.199248       1 shared_informer.go:318] Caches are synced for cidrallocator
I0108 07:30:51.205578       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0108 07:30:51.206784       1 shared_informer.go:318] Caches are synced for namespace
I0108 07:30:51.207086       1 range_allocator.go:380] "Set node PodCIDR" node="minikube" podCIDRs=["10.244.0.0/24"]
I0108 07:30:51.254083       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0108 07:30:51.325148       1 shared_informer.go:318] Caches are synced for crt configmap
I0108 07:30:51.332494       1 shared_informer.go:318] Caches are synced for ReplicationController
I0108 07:30:51.335892       1 shared_informer.go:318] Caches are synced for stateful set
I0108 07:30:51.343822       1 shared_informer.go:318] Caches are synced for HPA
I0108 07:30:51.348497       1 shared_informer.go:318] Caches are synced for resource quota
I0108 07:30:51.348796       1 shared_informer.go:318] Caches are synced for disruption
I0108 07:30:51.350073       1 shared_informer.go:318] Caches are synced for PVC protection
I0108 07:30:51.360986       1 shared_informer.go:318] Caches are synced for deployment
I0108 07:30:51.361075       1 shared_informer.go:318] Caches are synced for ephemeral
I0108 07:30:51.362516       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0108 07:30:51.363772       1 shared_informer.go:318] Caches are synced for persistent volume
I0108 07:30:51.364155       1 shared_informer.go:318] Caches are synced for taint
I0108 07:30:51.364296       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0108 07:30:51.364368       1 node_lifecycle_controller.go:1225] "Initializing eviction metric for zone" zone=""
I0108 07:30:51.364591       1 taint_manager.go:211] "Sending events to api server"
I0108 07:30:51.364624       1 event.go:307] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0108 07:30:51.364788       1 node_lifecycle_controller.go:877] "Missing timestamp for Node. Assuming now as a timestamp" node="minikube"
I0108 07:30:51.365071       1 node_lifecycle_controller.go:1071] "Controller detected that zone is now in new state" zone="" newState="Normal"
I0108 07:30:51.368486       1 shared_informer.go:318] Caches are synced for job
I0108 07:30:51.376256       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0108 07:30:51.393498       1 shared_informer.go:318] Caches are synced for GC
I0108 07:30:51.394768       1 shared_informer.go:318] Caches are synced for attach detach
I0108 07:30:51.396432       1 shared_informer.go:318] Caches are synced for daemon sets
I0108 07:30:51.396693       1 shared_informer.go:318] Caches are synced for endpoint
I0108 07:30:51.400613       1 shared_informer.go:318] Caches are synced for resource quota
I0108 07:30:51.716814       1 shared_informer.go:318] Caches are synced for garbage collector
I0108 07:30:51.716885       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0108 07:30:51.754879       1 shared_informer.go:318] Caches are synced for garbage collector
I0108 07:30:51.942881       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5dd5756b68 to 1"
I0108 07:30:52.100208       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-rx8c7"
I0108 07:30:52.193848       1 event.go:307] "Event occurred" object="kube-system/coredns-5dd5756b68" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5dd5756b68-7r62z"
I0108 07:30:52.201278       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="258.524606ms"
I0108 07:30:52.208950       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="7.614245ms"
I0108 07:30:52.209067       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="78.584µs"
I0108 07:30:52.215652       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="102.719µs"
I0108 07:30:54.732654       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="260.34µs"
I0108 07:31:12.550347       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="17.011804ms"
I0108 07:31:12.550641       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="191.409µs"

* 
* ==> kube-proxy [dbef7dc6e719] <==
* I0108 07:30:53.787947       1 server_others.go:69] "Using iptables proxy"
I0108 07:30:53.868159       1 node.go:141] Successfully retrieved node IP: 192.168.49.2
I0108 07:30:53.987012       1 server.go:632] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0108 07:30:53.994503       1 server_others.go:152] "Using iptables Proxier"
I0108 07:30:53.994592       1 server_others.go:421] "Detect-local-mode set to ClusterCIDR, but no cluster CIDR for family" ipFamily="IPv6"
I0108 07:30:53.994619       1 server_others.go:438] "Defaulting to no-op detect-local"
I0108 07:30:53.995318       1 proxier.go:251] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0108 07:30:53.996147       1 server.go:846] "Version info" version="v1.28.3"
I0108 07:30:53.996204       1 server.go:848] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0108 07:30:53.999457       1 config.go:188] "Starting service config controller"
I0108 07:30:53.999515       1 config.go:97] "Starting endpoint slice config controller"
I0108 07:30:53.999626       1 config.go:315] "Starting node config controller"
I0108 07:30:54.000617       1 shared_informer.go:311] Waiting for caches to sync for node config
I0108 07:30:54.001214       1 shared_informer.go:311] Waiting for caches to sync for service config
I0108 07:30:54.001401       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0108 07:30:54.101706       1 shared_informer.go:318] Caches are synced for service config
I0108 07:30:54.101792       1 shared_informer.go:318] Caches are synced for node config
I0108 07:30:54.104312       1 shared_informer.go:318] Caches are synced for endpoint slice config

* 
* ==> kube-proxy [ff3f03f3a919] <==
* I0109 04:50:09.136406       1 server_others.go:69] "Using iptables proxy"
I0109 04:50:09.251499       1 node.go:141] Successfully retrieved node IP: 192.168.49.2
I0109 04:50:09.459331       1 server.go:632] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0109 04:50:09.467850       1 server_others.go:152] "Using iptables Proxier"
I0109 04:50:09.467968       1 server_others.go:421] "Detect-local-mode set to ClusterCIDR, but no cluster CIDR for family" ipFamily="IPv6"
I0109 04:50:09.468000       1 server_others.go:438] "Defaulting to no-op detect-local"
I0109 04:50:09.469013       1 proxier.go:251] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0109 04:50:09.469823       1 server.go:846] "Version info" version="v1.28.3"
I0109 04:50:09.469931       1 server.go:848] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0109 04:50:09.477233       1 config.go:188] "Starting service config controller"
I0109 04:50:09.477803       1 shared_informer.go:311] Waiting for caches to sync for service config
I0109 04:50:09.478786       1 config.go:97] "Starting endpoint slice config controller"
I0109 04:50:09.478859       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0109 04:50:09.480693       1 config.go:315] "Starting node config controller"
I0109 04:50:09.480762       1 shared_informer.go:311] Waiting for caches to sync for node config
I0109 04:50:09.613053       1 shared_informer.go:318] Caches are synced for service config
I0109 04:50:09.613108       1 shared_informer.go:318] Caches are synced for node config
I0109 04:50:09.613235       1 shared_informer.go:318] Caches are synced for endpoint slice config

* 
* ==> kube-scheduler [1196420caa19] <==
* E0108 07:30:35.269726       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0108 07:30:35.275085       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0108 07:30:35.275176       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0108 07:30:35.275524       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0108 07:30:35.275638       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0108 07:30:35.275540       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0108 07:30:35.275731       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0108 07:30:35.276040       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0108 07:30:35.276082       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0108 07:30:35.276593       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0108 07:30:35.276638       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0108 07:30:35.276921       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0108 07:30:35.276981       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0108 07:30:35.279826       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0108 07:30:35.279896       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0108 07:30:35.280086       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0108 07:30:35.280120       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0108 07:30:35.280253       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0108 07:30:35.280304       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0108 07:30:35.280733       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0108 07:30:35.280768       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0108 07:30:35.280922       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0108 07:30:35.280950       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0108 07:30:35.354228       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0108 07:30:35.354378       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0108 07:30:35.354230       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0108 07:30:35.354494       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0108 07:30:36.157367       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0108 07:30:36.157456       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0108 07:30:36.161448       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0108 07:30:36.161536       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0108 07:30:36.255041       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0108 07:30:36.255393       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0108 07:30:36.255178       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0108 07:30:36.255536       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0108 07:30:36.271491       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0108 07:30:36.271583       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0108 07:30:36.277623       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0108 07:30:36.277753       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0108 07:30:36.290595       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0108 07:30:36.290674       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0108 07:30:36.353159       1 reflector.go:535] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0108 07:30:36.353268       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0108 07:30:36.454039       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0108 07:30:36.454147       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0108 07:30:36.505366       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0108 07:30:36.505459       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0108 07:30:36.727968       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0108 07:30:36.728072       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0108 07:30:36.752414       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0108 07:30:36.752516       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0108 07:30:36.794282       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0108 07:30:36.794363       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0108 07:30:36.805377       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0108 07:30:36.805466       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0108 07:30:36.853940       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0108 07:30:36.854044       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
I0108 07:30:38.557461       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0108 07:31:55.455728       1 secure_serving.go:258] Stopped listening on 127.0.0.1:10259
E0108 07:31:55.456501       1 run.go:74] "command failed" err="finished without leader elect"

* 
* ==> kube-scheduler [936936e802d6] <==
* I0109 04:49:58.412669       1 serving.go:348] Generated self-signed cert in-memory
W0109 04:50:04.016548       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0109 04:50:04.016767       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0109 04:50:04.016899       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0109 04:50:04.016992       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0109 04:50:04.435014       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.28.3"
I0109 04:50:04.435102       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0109 04:50:04.443555       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0109 04:50:04.512967       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0109 04:50:04.513069       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0109 04:50:04.517471       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0109 04:50:04.613606       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* Jan 09 04:55:12 minikube kubelet[1898]: I0109 04:55:12.725003    1898 topology_manager.go:215] "Topology Admit Handler" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db" podNamespace="default" podName="fastapi-7f9bb9b996-z4hl5"
Jan 09 04:55:12 minikube kubelet[1898]: I0109 04:55:12.924733    1898 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-jqkqq\" (UniqueName: \"kubernetes.io/projected/ce1a70e4-5da3-4994-8294-0ad10ee0e8db-kube-api-access-jqkqq\") pod \"fastapi-7f9bb9b996-z4hl5\" (UID: \"ce1a70e4-5da3-4994-8294-0ad10ee0e8db\") " pod="default/fastapi-7f9bb9b996-z4hl5"
Jan 09 04:55:17 minikube kubelet[1898]: E0109 04:55:17.189435    1898 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:55:17 minikube kubelet[1898]: E0109 04:55:17.189590    1898 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:55:17 minikube kubelet[1898]: E0109 04:55:17.190609    1898 kuberuntime_manager.go:1256] container &Container{Name:fastapi,Image:guhan/fastapi-image:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{EnvVar{Name:DATABASE_URL,Value:,ValueFrom:&EnvVarSource{FieldRef:nil,ResourceFieldRef:nil,ConfigMapKeyRef:nil,SecretKeyRef:&SecretKeySelector{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Key:URL,Optional:nil,},},},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jqkqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-7f9bb9b996-z4hl5_default(ce1a70e4-5da3-4994-8294-0ad10ee0e8db): ErrImagePull: Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jan 09 04:55:17 minikube kubelet[1898]: E0109 04:55:17.190790    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:55:17 minikube kubelet[1898]: E0109 04:55:17.489744    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:55:32 minikube kubelet[1898]: E0109 04:55:32.033936    1898 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:55:32 minikube kubelet[1898]: E0109 04:55:32.034057    1898 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:55:32 minikube kubelet[1898]: E0109 04:55:32.034290    1898 kuberuntime_manager.go:1256] container &Container{Name:fastapi,Image:guhan/fastapi-image:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{EnvVar{Name:DATABASE_URL,Value:,ValueFrom:&EnvVarSource{FieldRef:nil,ResourceFieldRef:nil,ConfigMapKeyRef:nil,SecretKeyRef:&SecretKeySelector{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Key:URL,Optional:nil,},},},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jqkqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-7f9bb9b996-z4hl5_default(ce1a70e4-5da3-4994-8294-0ad10ee0e8db): ErrImagePull: Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jan 09 04:55:32 minikube kubelet[1898]: E0109 04:55:32.034465    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:55:45 minikube kubelet[1898]: E0109 04:55:45.944114    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:56:00 minikube kubelet[1898]: E0109 04:56:00.914808    1898 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:56:00 minikube kubelet[1898]: E0109 04:56:00.914980    1898 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:56:00 minikube kubelet[1898]: E0109 04:56:00.915300    1898 kuberuntime_manager.go:1256] container &Container{Name:fastapi,Image:guhan/fastapi-image:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{EnvVar{Name:DATABASE_URL,Value:,ValueFrom:&EnvVarSource{FieldRef:nil,ResourceFieldRef:nil,ConfigMapKeyRef:nil,SecretKeyRef:&SecretKeySelector{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Key:URL,Optional:nil,},},},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jqkqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-7f9bb9b996-z4hl5_default(ce1a70e4-5da3-4994-8294-0ad10ee0e8db): ErrImagePull: Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jan 09 04:56:00 minikube kubelet[1898]: E0109 04:56:00.915467    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:56:12 minikube kubelet[1898]: E0109 04:56:12.944944    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:56:23 minikube kubelet[1898]: E0109 04:56:23.942236    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:56:35 minikube kubelet[1898]: E0109 04:56:35.947416    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:56:54 minikube kubelet[1898]: E0109 04:56:54.313088    1898 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:56:54 minikube kubelet[1898]: E0109 04:56:54.313184    1898 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:56:54 minikube kubelet[1898]: E0109 04:56:54.313345    1898 kuberuntime_manager.go:1256] container &Container{Name:fastapi,Image:guhan/fastapi-image:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{EnvVar{Name:DATABASE_URL,Value:,ValueFrom:&EnvVarSource{FieldRef:nil,ResourceFieldRef:nil,ConfigMapKeyRef:nil,SecretKeyRef:&SecretKeySelector{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Key:URL,Optional:nil,},},},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jqkqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-7f9bb9b996-z4hl5_default(ce1a70e4-5da3-4994-8294-0ad10ee0e8db): ErrImagePull: Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jan 09 04:56:54 minikube kubelet[1898]: E0109 04:56:54.313425    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:57:07 minikube kubelet[1898]: E0109 04:57:07.946949    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:57:18 minikube kubelet[1898]: E0109 04:57:18.942756    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:57:32 minikube kubelet[1898]: E0109 04:57:32.940565    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:57:46 minikube kubelet[1898]: E0109 04:57:46.942511    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:58:01 minikube kubelet[1898]: E0109 04:58:01.950077    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:58:10 minikube kubelet[1898]: I0109 04:58:10.315122    1898 topology_manager.go:215] "Topology Admit Handler" podUID="3df60750-e81b-456b-88ed-4626fe312a9c" podNamespace="default" podName="postgres-7d6645d7fb-gqcj7"
Jan 09 04:58:10 minikube kubelet[1898]: I0109 04:58:10.443697    1898 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-blznn\" (UniqueName: \"kubernetes.io/projected/3df60750-e81b-456b-88ed-4626fe312a9c-kube-api-access-blznn\") pod \"postgres-7d6645d7fb-gqcj7\" (UID: \"3df60750-e81b-456b-88ed-4626fe312a9c\") " pod="default/postgres-7d6645d7fb-gqcj7"
Jan 09 04:58:13 minikube kubelet[1898]: E0109 04:58:13.943354    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:58:37 minikube kubelet[1898]: I0109 04:58:37.107741    1898 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="default/postgres-7d6645d7fb-gqcj7" podStartSLOduration=2.16907768 podCreationTimestamp="2024-01-09 04:58:10 +0000 UTC" firstStartedPulling="2024-01-09 04:58:10.856931651 +0000 UTC m=+497.271175742" lastFinishedPulling="2024-01-09 04:58:35.795543789 +0000 UTC m=+522.209787939" observedRunningTime="2024-01-09 04:58:37.10733257 +0000 UTC m=+523.521576665" watchObservedRunningTime="2024-01-09 04:58:37.107689877 +0000 UTC m=+523.521933968"
Jan 09 04:58:39 minikube kubelet[1898]: E0109 04:58:39.829404    1898 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:58:39 minikube kubelet[1898]: E0109 04:58:39.829514    1898 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 04:58:39 minikube kubelet[1898]: E0109 04:58:39.829737    1898 kuberuntime_manager.go:1256] container &Container{Name:fastapi,Image:guhan/fastapi-image:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{EnvVar{Name:DATABASE_URL,Value:,ValueFrom:&EnvVarSource{FieldRef:nil,ResourceFieldRef:nil,ConfigMapKeyRef:nil,SecretKeyRef:&SecretKeySelector{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Key:URL,Optional:nil,},},},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jqkqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-7f9bb9b996-z4hl5_default(ce1a70e4-5da3-4994-8294-0ad10ee0e8db): ErrImagePull: Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jan 09 04:58:39 minikube kubelet[1898]: E0109 04:58:39.829867    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:58:53 minikube kubelet[1898]: E0109 04:58:53.944532    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:59:04 minikube kubelet[1898]: E0109 04:59:04.942919    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:59:18 minikube kubelet[1898]: E0109 04:59:18.943956    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:59:30 minikube kubelet[1898]: E0109 04:59:30.033052    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:59:41 minikube kubelet[1898]: E0109 04:59:41.943705    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 04:59:54 minikube kubelet[1898]: E0109 04:59:54.943241    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:00:05 minikube kubelet[1898]: E0109 05:00:05.941378    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:00:17 minikube kubelet[1898]: E0109 05:00:17.944965    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:00:30 minikube kubelet[1898]: E0109 05:00:30.944209    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:00:42 minikube kubelet[1898]: E0109 05:00:42.942901    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:00:57 minikube kubelet[1898]: E0109 05:00:57.944256    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:01:11 minikube kubelet[1898]: E0109 05:01:11.942860    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:01:29 minikube kubelet[1898]: E0109 05:01:29.193929    1898 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 05:01:29 minikube kubelet[1898]: E0109 05:01:29.194081    1898 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="guhan/fastapi-image:latest"
Jan 09 05:01:29 minikube kubelet[1898]: E0109 05:01:29.194445    1898 kuberuntime_manager.go:1256] container &Container{Name:fastapi,Image:guhan/fastapi-image:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:5000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{EnvVar{Name:DATABASE_URL,Value:,ValueFrom:&EnvVarSource{FieldRef:nil,ResourceFieldRef:nil,ConfigMapKeyRef:nil,SecretKeyRef:&SecretKeySelector{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Key:URL,Optional:nil,},},},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jqkqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-7f9bb9b996-z4hl5_default(ce1a70e4-5da3-4994-8294-0ad10ee0e8db): ErrImagePull: Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Jan 09 05:01:29 minikube kubelet[1898]: E0109 05:01:29.194635    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for guhan/fastapi-image, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:01:43 minikube kubelet[1898]: E0109 05:01:43.943755    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:01:56 minikube kubelet[1898]: E0109 05:01:56.943347    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:02:08 minikube kubelet[1898]: E0109 05:02:08.939959    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:02:22 minikube kubelet[1898]: E0109 05:02:22.943928    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:02:36 minikube kubelet[1898]: E0109 05:02:36.950150    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:02:50 minikube kubelet[1898]: E0109 05:02:50.943207    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:03:05 minikube kubelet[1898]: E0109 05:03:05.942898    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"
Jan 09 05:03:20 minikube kubelet[1898]: E0109 05:03:20.942939    1898 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"guhan/fastapi-image:latest\\\"\"" pod="default/fastapi-7f9bb9b996-z4hl5" podUID="ce1a70e4-5da3-4994-8294-0ad10ee0e8db"

* 
* ==> storage-provisioner [1f0df05f8b10] <==
* I0109 04:50:30.052397       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0109 04:50:30.061133       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0109 04:50:30.061461       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0109 04:50:47.478894       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0109 04:50:47.479099       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_34ed95ba-4d92-4634-8260-dccbbba99ac2!
I0109 04:50:47.479017       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"93242437-8d03-49b0-be7c-7ddbf4a38ffe", APIVersion:"v1", ResourceVersion:"582", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_34ed95ba-4d92-4634-8260-dccbbba99ac2 became leader
I0109 04:50:47.580212       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_34ed95ba-4d92-4634-8260-dccbbba99ac2!

* 
* ==> storage-provisioner [cf8a194ccad9] <==
* I0109 04:50:08.117951       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0109 04:50:18.213707       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": net/http: TLS handshake timeout

